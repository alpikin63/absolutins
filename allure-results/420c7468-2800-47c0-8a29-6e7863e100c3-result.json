{"name": "Переход на вкладку Оплата. Страхователь не является застрахованным. Страховая сумма 100000.Застрахованный имеет паспорт", "status": "failed", "statusDetails": {"message": "selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 4s, while waiting for:\nbrowser.element(('css selector', '.calc-steps-desktop li.current span')).has text 3. Оплата\n\nReason: AssertionError: actual text: 2. Ввод данных", "trace": "self = <selene.core.wait.Wait object at 0x0000022AD6BC1C90>, fn = <selene.core.conditions.ElementCondition object at 0x0000022AD6BC1A20>\n\n    def for_(self, fn: Callable[[E], R]) -> R:\n        finish_time = time.time() + self._timeout\n    \n        while True:\n            try:\n>               return fn(self._entity)\n\nentity     = <selene.core.entity.Element object at 0x0000022AD53AD540>\nfailure    = TimeoutException(\"\\n\\nTimed out after 4s, while waiting for:\\nbrowser.element(('css selector', '.calc-steps-desktop li.current span')).has text 3. Оплата\\n\\nReason: AssertionError: actual text: 2. Ввод данных\")\nfinish_time = 1666593163.3524766\nfn         = <selene.core.conditions.ElementCondition object at 0x0000022AD6BC1A20>\nreason_message = 'actual text: 2. Ввод данных'\nreason_string = 'AssertionError: actual text: 2. Ввод данных'\nself       = <selene.core.wait.Wait object at 0x0000022AD6BC1C90>\ntimeout    = 4\n\n..\\..\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\wait.py:102: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selene.core.conditions.ElementCondition object at 0x0000022AD6BC1A20>, entity = <selene.core.entity.Element object at 0x0000022AD53AD540>\n\n    def __call__(self, entity: E) -> None:\n>       return self._fn(entity)\n\nentity     = <selene.core.entity.Element object at 0x0000022AD53AD540>\nself       = <selene.core.conditions.ElementCondition object at 0x0000022AD6BC1A20>\n\n..\\..\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\condition.py:151: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nentity = <selene.core.entity.Element object at 0x0000022AD53AD540>\n\n    def fn(entity: E) -> None:\n        query_to_str = str(query)\n        result = (\n            query.__name__\n            if query_to_str.startswith('<function')\n            else query_to_str\n        )\n        actual = query(entity)\n        if not predicate(actual):\n>           raise AssertionError(f'actual {result}: {actual}')\nE           AssertionError: actual text: 2. Ввод данных\n\nactual     = '2. Ввод данных'\nentity     = <selene.core.entity.Element object at 0x0000022AD53AD540>\npredicate  = <function includes.<locals>.fn at 0x0000022AD6C6C4C0>\nquery      = <selene.core.wait.Query object at 0x0000022AD5B4D150>\nquery_to_str = 'text'\nresult     = 'text'\n\n..\\..\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\condition.py:124: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.ui.test_form_data.TestCalculateForm object at 0x0000022AD6858F10>\nopen_policy_purchase_form_go_to_data_tab = <function open_policy_purchase_form_go_to_data_tab.<locals>._open at 0x0000022AD6C13D00>\n\n    @allure.title('Переход на вкладку Оплата. Страхователь не является застрахованным. Страховая сумма 100000.'\n                  'Застрахованный имеет паспорт')\n    def test_open_payment_form_add_person_with_passport_change_sum(self, open_policy_purchase_form_go_to_data_tab):\n        test_data = FormDataBuilder().random_without_add_person().build()\n    \n        policy_form_page = open_policy_purchase_form_go_to_data_tab(change_sum=True)\n        policy_form_page.fill_form_data(test_data)\n        policy_form_page.click_on_go_to_payments_tab()\n>       policy_form_page.assure_current_step_name(StepNameData.STEP_PAYMENT)\n\nopen_policy_purchase_form_go_to_data_tab = <function open_policy_purchase_form_go_to_data_tab.<locals>._open at 0x0000022AD6C13D00>\npolicy_form_page = <core.pages.coronavirus_insurance_policy_page.CoronavirusInsurancePolicyPage object at 0x0000022AD53AFAC0>\nself       = <tests.ui.test_form_data.TestCalculateForm object at 0x0000022AD6858F10>\ntest_data  = FormData(fio='Раиса Ждановна Дементьева', birthday='28.08.1986', doc_data='9824-120178', doc_issue_date='12.08.2017', ...red='Ратибор Глебович Пахомов', date_birth_insured='07.12.1976', id_insured='9097-353666', id_dateInsured='26.04.2013')\n\ntests\\ui\\test_form_data.py:70: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncore\\pages\\coronavirus_insurance_policy_page.py:80: in assure_current_step_name\n    self._current_step_text.should(have.text(value))\n        self       = <core.pages.coronavirus_insurance_policy_page.CoronavirusInsurancePolicyPage object at 0x0000022AD53AFAC0>\n        value      = <StepNameData.STEP_PAYMENT: '3. Оплата'>\n..\\..\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\entity.py:539: in should\n    super().should(condition)\n        __class__  = <class 'selene.core.entity.Element'>\n        condition  = <selene.core.conditions.ElementCondition object at 0x0000022AD6BC1A20>\n        self       = <selene.core.entity.Element object at 0x0000022AD53AD540>\n        timeout    = None\n..\\..\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\entity.py:126: in should\n    self.wait.for_(condition)\n        condition  = <selene.core.conditions.ElementCondition object at 0x0000022AD6BC1A20>\n        self       = <selene.core.entity.Element object at 0x0000022AD53AD540>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selene.core.wait.Wait object at 0x0000022AD6BC1C90>, fn = <selene.core.conditions.ElementCondition object at 0x0000022AD6BC1A20>\n\n        def for_(self, fn: Callable[[E], R]) -> R:\n            finish_time = time.time() + self._timeout\n    \n            while True:\n                try:\n                    return fn(self._entity)\n                except Exception as reason:\n                    if time.time() > finish_time:\n    \n                        reason_message = str(reason)\n    \n                        reason_string = '{name}: {message}'.format(\n                            name=reason.__class__.__name__, message=reason_message\n                        )\n                        # todo: think on how can we improve logging failures in selene, e.g. reverse msg and stacktrace\n                        # stacktrace = getattr(reason, 'stacktrace', None)\n                        timeout = self._timeout\n                        entity = self._entity\n    \n                        failure = TimeoutException(\n                            f'''\n    \n    Timed out after {timeout}s, while waiting for:\n    {entity}.{fn}\n    \n    Reason: {reason_string}'''\n                        )\n    \n>                       raise self._hook_failure(failure)\nE                       selene.core.exceptions.TimeoutException: Message: \nE                       \nE                       Timed out after 4s, while waiting for:\nE                       browser.element(('css selector', '.calc-steps-desktop li.current span')).has text 3. Оплата\nE                       \nE                       Reason: AssertionError: actual text: 2. Ввод данных\n\nentity     = <selene.core.entity.Element object at 0x0000022AD53AD540>\nfailure    = TimeoutException(\"\\n\\nTimed out after 4s, while waiting for:\\nbrowser.element(('css selector', '.calc-steps-desktop li.current span')).has text 3. Оплата\\n\\nReason: AssertionError: actual text: 2. Ввод данных\")\nfinish_time = 1666593163.3524766\nfn         = <selene.core.conditions.ElementCondition object at 0x0000022AD6BC1A20>\nreason_message = 'actual text: 2. Ввод данных'\nreason_string = 'AssertionError: actual text: 2. Ввод данных'\nself       = <selene.core.wait.Wait object at 0x0000022AD6BC1C90>\ntimeout    = 4\n\n..\\..\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\wait.py:125: TimeoutException"}, "steps": [{"name": "Переход по адресу: \"https://old.absolutins.ru/kupit-strahovoj-polis/strahovanie-zhizni-i-zdorovya/zashchita-ot-virusa/\"", "status": "passed", "start": 1666593141570, "stop": 1666593146881}, {"name": "Выбрать страховую сумму полиса.", "status": "passed", "steps": [{"name": "выбрать сумму: 100000", "status": "passed", "start": 1666593146882, "stop": 1666593147321}], "parameters": [{"name": "sum_value", "value": "100000"}], "start": 1666593146882, "stop": 1666593147321}, {"name": "Выбрать чекбокс \"Подтверждаю, что -  Отсутствуют лица, проживающие совместно с Застрахованным, у которых диагностирована коронавирусная инфекция COVID-2019 ( код заболевания по МКБ-10 – В 34.2.)\".", "status": "passed", "start": 1666593147321, "stop": 1666593147606}, {"name": "Нажать кнопку \"Продолжить\".", "status": "passed", "start": 1666593147606, "stop": 1666593147848}, {"name": "Заполнить форму \"Ввод данных\"", "status": "passed", "steps": [{"name": "Заполнить поле \"ФИО страхователя\"", "status": "passed", "steps": [{"name": "Ввести значение: Раиса Ждановна Дементьева", "status": "passed", "start": 1666593147849, "stop": 1666593148455}], "parameters": [{"name": "value", "value": "'Раиса Ждановна Дементьева'"}], "start": 1666593147849, "stop": 1666593148455}, {"name": "Заполнить поле \"Дата рождения страхователя\"", "status": "passed", "steps": [{"name": "Ввести значение: 28.08.1986", "status": "passed", "start": 1666593148456, "stop": 1666593148520}], "parameters": [{"name": "value", "value": "'28.08.1986'"}], "start": 1666593148456, "stop": 1666593148520}, {"name": "Заполнить поле \"Серия/номер паспорта страхователя\"", "status": "passed", "steps": [{"name": "Ввести значение: 9824-120178", "status": "passed", "start": 1666593148521, "stop": 1666593148603}], "parameters": [{"name": "value", "value": "'9824-120178'"}], "start": 1666593148521, "stop": 1666593148603}, {"name": "Заполнить поле \"Дата выдачи\"", "status": "passed", "steps": [{"name": "Ввести значение: 12.08.2017", "status": "passed", "start": 1666593148603, "stop": 1666593148854}], "parameters": [{"name": "value", "value": "'12.08.2017'"}], "start": 1666593148603, "stop": 1666593148854}, {"name": "Заполнить поле \"Адрес регистрации\"", "status": "passed", "steps": [{"name": "Ввести значение: д. Елабуга, наб. Семашко, д. 839 к. 346, 491950", "status": "passed", "start": 1666593148854, "stop": 1666593149284}], "parameters": [{"name": "value", "value": "'д. Елабуга, наб. Семашко, д. 839 к. 346, 491950'"}], "start": 1666593148854, "stop": 1666593149284}, {"name": "Заполнить поле \"Телефон\"", "status": "passed", "steps": [{"name": "Ввести значение: +7(611)-365-61-05", "status": "passed", "start": 1666593149285, "stop": 1666593149518}], "parameters": [{"name": "value", "value": "'+7(611)-365-61-05'"}], "start": 1666593149285, "stop": 1666593149519}, {"name": "Заполнить поле \"Email\"", "status": "passed", "steps": [{"name": "Ввести значение: ilja_1987@trofimova.edu", "status": "passed", "start": 1666593149519, "stop": 1666593149800}], "parameters": [{"name": "value", "value": "'ilja_1987@trofimova.edu'"}], "start": 1666593149519, "stop": 1666593149800}, {"name": "Заполнить поле \"ФИО застрахованного\"", "status": "passed", "steps": [{"name": "Ввести значение: Ратибор Глебович Пахомов", "status": "passed", "start": 1666593150000, "stop": 1666593150264}], "parameters": [{"name": "value", "value": "'Ратибор Глебович Пахомов'"}], "start": 1666593150000, "stop": 1666593150264}, {"name": "Заполнить поле \"Дата рождения застрахованного\"", "status": "passed", "steps": [{"name": "Ввести значение: 07.12.1976", "status": "passed", "start": 1666593150264, "stop": 1666593150327}], "parameters": [{"name": "value", "value": "'07.12.1976'"}], "start": 1666593150264, "stop": 1666593150327}, {"name": "Заполнить поле \"Серия/номер паспорта застрахованного\"", "status": "passed", "steps": [{"name": "Ввести значение: 9097-353666", "status": "passed", "start": 1666593150328, "stop": 1666593150355}], "parameters": [{"name": "value", "value": "'9097-353666'"}], "start": 1666593150328, "stop": 1666593150355}, {"name": "Заполнить поле \"Дата выдачи\" у застрахованного", "status": "passed", "steps": [{"name": "Ввести значение: 26.04.2013", "status": "passed", "start": 1666593150356, "stop": 1666593150420}], "parameters": [{"name": "value", "value": "'26.04.2013'"}], "start": 1666593150356, "stop": 1666593150420}], "parameters": [{"name": "value", "value": "FormData(fio='Раиса Ждановна Дементьева', birthday='28.08.1986', doc_data='9824-120178', doc_issue_date='12.08.2017', registration_address='д. Елабуга, наб. Семашко, д. 839 к. 346, 491950', phone='+7(611)-365-61-05', email='ilja_1987@trofimova.edu', add_person=False, name_insured='Ратибор Глебович Пахомов', date_birth_insured='07.12.1976', id_insured='9097-353666', id_dateInsured='26.04.2013')"}], "start": 1666593147848, "stop": 1666593150420}, {"name": "Нажать кнопку \"Перейти к оплате\"", "status": "passed", "steps": [{"name": "Ожидание прогрузки страницы", "status": "passed", "start": 1666593150539, "stop": 1666593159340}], "start": 1666593150420, "stop": 1666593159340}, {"name": "Проверить название текущего шага.", "status": "failed", "statusDetails": {"message": "selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 4s, while waiting for:\nbrowser.element(('css selector', '.calc-steps-desktop li.current span')).has text 3. Оплата\n\nReason: AssertionError: actual text: 2. Ввод данных\n\n", "trace": "  File \"C:\\Users\\alpik\\.virtualenvs\\absolutins\\lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\alpik\\PycharmProjects\\absolutins\\core\\pages\\coronavirus_insurance_policy_page.py\", line 80, in assure_current_step_name\n    self._current_step_text.should(have.text(value))\n  File \"C:\\Users\\alpik\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\entity.py\", line 539, in should\n    super().should(condition)\n  File \"C:\\Users\\alpik\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\entity.py\", line 126, in should\n    self.wait.for_(condition)\n  File \"C:\\Users\\alpik\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\wait.py\", line 125, in for_\n    raise self._hook_failure(failure)\n"}, "steps": [{"name": "Скролл к началу страницы", "status": "passed", "start": 1666593159341, "stop": 1666593159352}, {"name": "Текущий активный шаг: 3. Оплата", "status": "failed", "statusDetails": {"message": "selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 4s, while waiting for:\nbrowser.element(('css selector', '.calc-steps-desktop li.current span')).has text 3. Оплата\n\nReason: AssertionError: actual text: 2. Ввод данных\n\n", "trace": "  File \"C:\\Users\\alpik\\PycharmProjects\\absolutins\\core\\pages\\coronavirus_insurance_policy_page.py\", line 80, in assure_current_step_name\n    self._current_step_text.should(have.text(value))\n  File \"C:\\Users\\alpik\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\entity.py\", line 539, in should\n    super().should(condition)\n  File \"C:\\Users\\alpik\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\entity.py\", line 126, in should\n    self.wait.for_(condition)\n  File \"C:\\Users\\alpik\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\wait.py\", line 125, in for_\n    raise self._hook_failure(failure)\n"}, "start": 1666593159352, "stop": 1666593163370}], "parameters": [{"name": "value", "value": "'3. Оплата'"}], "start": 1666593159340, "stop": 1666593163370}], "attachments": [{"name": "failure-screenshot", "source": "243c49dc-bcaa-4648-acc2-bef731eb050c-attachment.png", "type": "image/png"}, {"name": "js-console-log", "source": "b60d6f0f-d478-48b6-94ce-0d1768dafc8c-attachment.txt", "type": "text/plain"}, {"name": "driver-log", "source": "d77e0afe-5b00-4df7-80d0-3656a7d4fb0f-attachment.txt", "type": "text/plain"}, {"name": "log", "source": "fee67da9-20bf-43af-ac77-48bc4a9c9ba2-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "fbbb49b3-c472-49a3-8f1a-5e6c89955431-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "929b304d-1c9c-4786-9df7-af3dcc4b8c72-attachment.txt", "type": "text/plain"}], "start": 1666593141416, "stop": 1666593163371, "uuid": "10397a0b-e304-499c-a915-1b64fdf2bdb2", "historyId": "660afc9d484e269a34cc16f70eaad6c0", "testCaseId": "b733b267fcda6abba51b08057839d977", "fullName": "ui.test_form_data.TestCalculateForm#test_open_payment_form_add_person_with_passport_change_sum", "labels": [{"name": "subSuite", "value": "Ввод данных"}, {"name": "suite", "value": "Форма покупки полиса"}, {"name": "parentSuite", "value": "Регрессионное тестирование"}, {"name": "tag", "value": "regress"}, {"name": "tag", "value": "@pytest.mark.usefixtures('web_browser')"}, {"name": "host", "value": "DESKTOP-GMLT5VV"}, {"name": "thread", "value": "22688-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "ui.test_form_data"}]}