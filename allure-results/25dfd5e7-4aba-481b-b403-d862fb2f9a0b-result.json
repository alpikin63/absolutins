{"name": "Переход на вкладку Оплата. Страхователь не является застрахованным. Страховая сумма 500000.Застрахованный не имеет паспорт", "status": "failed", "statusDetails": {"message": "selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 4s, while waiting for:\nbrowser.element(('css selector', '.calc-steps-desktop li.current span')).has text 3. Оплата\n\nReason: AssertionError: actual text: 2. Ввод данных", "trace": "self = <selene.core.wait.Wait object at 0x0000022AD6C579D0>, fn = <selene.core.conditions.ElementCondition object at 0x0000022AD6C57A30>\n\n    def for_(self, fn: Callable[[E], R]) -> R:\n        finish_time = time.time() + self._timeout\n    \n        while True:\n            try:\n>               return fn(self._entity)\n\nentity     = <selene.core.entity.Element object at 0x0000022AD6C56E60>\nfailure    = TimeoutException(\"\\n\\nTimed out after 4s, while waiting for:\\nbrowser.element(('css selector', '.calc-steps-desktop li.current span')).has text 3. Оплата\\n\\nReason: AssertionError: actual text: 2. Ввод данных\")\nfinish_time = 1666593111.507171\nfn         = <selene.core.conditions.ElementCondition object at 0x0000022AD6C57A30>\nreason_message = 'actual text: 2. Ввод данных'\nreason_string = 'AssertionError: actual text: 2. Ввод данных'\nself       = <selene.core.wait.Wait object at 0x0000022AD6C579D0>\ntimeout    = 4\n\n..\\..\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\wait.py:102: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selene.core.conditions.ElementCondition object at 0x0000022AD6C57A30>, entity = <selene.core.entity.Element object at 0x0000022AD6C56E60>\n\n    def __call__(self, entity: E) -> None:\n>       return self._fn(entity)\n\nentity     = <selene.core.entity.Element object at 0x0000022AD6C56E60>\nself       = <selene.core.conditions.ElementCondition object at 0x0000022AD6C57A30>\n\n..\\..\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\condition.py:151: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nentity = <selene.core.entity.Element object at 0x0000022AD6C56E60>\n\n    def fn(entity: E) -> None:\n        query_to_str = str(query)\n        result = (\n            query.__name__\n            if query_to_str.startswith('<function')\n            else query_to_str\n        )\n        actual = query(entity)\n        if not predicate(actual):\n>           raise AssertionError(f'actual {result}: {actual}')\nE           AssertionError: actual text: 2. Ввод данных\n\nactual     = '2. Ввод данных'\nentity     = <selene.core.entity.Element object at 0x0000022AD6C56E60>\npredicate  = <function includes.<locals>.fn at 0x0000022AD6C10820>\nquery      = <selene.core.wait.Query object at 0x0000022AD5B4D150>\nquery_to_str = 'text'\nresult     = 'text'\n\n..\\..\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\condition.py:124: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.ui.test_form_data.TestCalculateForm object at 0x0000022AD6858AF0>\nopen_policy_purchase_form_go_to_data_tab = <function open_policy_purchase_form_go_to_data_tab.<locals>._open at 0x0000022AD6C12D40>\n\n    @allure.title('Переход на вкладку Оплата. Страхователь не является застрахованным. Страховая сумма 500000.'\n                  'Застрахованный не имеет паспорт')\n    def test_open_payment_form_add_person_without_passport(self, open_policy_purchase_form_go_to_data_tab):\n        start_date = datetime.now()\n        result_date = start_date - timedelta(days=1096)\n    \n        test_data = FormDataBuilder() \\\n            .random_without_add_person() \\\n            .but() \\\n            .with_date_birth_insured(result_date.strftime('%d.%m.%Y')) \\\n            .with_id_insured(None) \\\n            .with_id_date_insured(None) \\\n            .build()\n    \n        policy_form_page = open_policy_purchase_form_go_to_data_tab()\n        policy_form_page.fill_form_data(test_data)\n        policy_form_page.click_on_go_to_payments_tab()\n>       policy_form_page.assure_current_step_name(StepNameData.STEP_PAYMENT)\n\nopen_policy_purchase_form_go_to_data_tab = <function open_policy_purchase_form_go_to_data_tab.<locals>._open at 0x0000022AD6C12D40>\npolicy_form_page = <core.pages.coronavirus_insurance_policy_page.CoronavirusInsurancePolicyPage object at 0x0000022AD6C54550>\nresult_date = datetime.datetime(2019, 10, 24, 9, 31, 30, 270440)\nself       = <tests.ui.test_form_data.TestCalculateForm object at 0x0000022AD6858AF0>\nstart_date = datetime.datetime(2022, 10, 24, 9, 31, 30, 270440)\ntest_data  = FormData(fio='Данилова Татьяна Олеговна', birthday='15.06.1970', doc_data='2346-967625', doc_issue_date='04.06.2012', ...e, name_insured='Алевтина Степановна Горбунова', date_birth_insured='24.10.2019', id_insured=None, id_dateInsured=None)\n\ntests\\ui\\test_form_data.py:51: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncore\\pages\\coronavirus_insurance_policy_page.py:80: in assure_current_step_name\n    self._current_step_text.should(have.text(value))\n        self       = <core.pages.coronavirus_insurance_policy_page.CoronavirusInsurancePolicyPage object at 0x0000022AD6C54550>\n        value      = <StepNameData.STEP_PAYMENT: '3. Оплата'>\n..\\..\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\entity.py:539: in should\n    super().should(condition)\n        __class__  = <class 'selene.core.entity.Element'>\n        condition  = <selene.core.conditions.ElementCondition object at 0x0000022AD6C57A30>\n        self       = <selene.core.entity.Element object at 0x0000022AD6C56E60>\n        timeout    = None\n..\\..\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\entity.py:126: in should\n    self.wait.for_(condition)\n        condition  = <selene.core.conditions.ElementCondition object at 0x0000022AD6C57A30>\n        self       = <selene.core.entity.Element object at 0x0000022AD6C56E60>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selene.core.wait.Wait object at 0x0000022AD6C579D0>, fn = <selene.core.conditions.ElementCondition object at 0x0000022AD6C57A30>\n\n        def for_(self, fn: Callable[[E], R]) -> R:\n            finish_time = time.time() + self._timeout\n    \n            while True:\n                try:\n                    return fn(self._entity)\n                except Exception as reason:\n                    if time.time() > finish_time:\n    \n                        reason_message = str(reason)\n    \n                        reason_string = '{name}: {message}'.format(\n                            name=reason.__class__.__name__, message=reason_message\n                        )\n                        # todo: think on how can we improve logging failures in selene, e.g. reverse msg and stacktrace\n                        # stacktrace = getattr(reason, 'stacktrace', None)\n                        timeout = self._timeout\n                        entity = self._entity\n    \n                        failure = TimeoutException(\n                            f'''\n    \n    Timed out after {timeout}s, while waiting for:\n    {entity}.{fn}\n    \n    Reason: {reason_string}'''\n                        )\n    \n>                       raise self._hook_failure(failure)\nE                       selene.core.exceptions.TimeoutException: Message: \nE                       \nE                       Timed out after 4s, while waiting for:\nE                       browser.element(('css selector', '.calc-steps-desktop li.current span')).has text 3. Оплата\nE                       \nE                       Reason: AssertionError: actual text: 2. Ввод данных\n\nentity     = <selene.core.entity.Element object at 0x0000022AD6C56E60>\nfailure    = TimeoutException(\"\\n\\nTimed out after 4s, while waiting for:\\nbrowser.element(('css selector', '.calc-steps-desktop li.current span')).has text 3. Оплата\\n\\nReason: AssertionError: actual text: 2. Ввод данных\")\nfinish_time = 1666593111.507171\nfn         = <selene.core.conditions.ElementCondition object at 0x0000022AD6C57A30>\nreason_message = 'actual text: 2. Ввод данных'\nreason_string = 'AssertionError: actual text: 2. Ввод данных'\nself       = <selene.core.wait.Wait object at 0x0000022AD6C579D0>\ntimeout    = 4\n\n..\\..\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\wait.py:125: TimeoutException"}, "steps": [{"name": "Переход по адресу: \"https://old.absolutins.ru/kupit-strahovoj-polis/strahovanie-zhizni-i-zdorovya/zashchita-ot-virusa/\"", "status": "passed", "start": 1666593090477, "stop": 1666593094673}, {"name": "Выбрать чекбокс \"Подтверждаю, что -  Отсутствуют лица, проживающие совместно с Застрахованным, у которых диагностирована коронавирусная инфекция COVID-2019 ( код заболевания по МКБ-10 – В 34.2.)\".", "status": "passed", "start": 1666593094673, "stop": 1666593095227}, {"name": "Нажать кнопку \"Продолжить\".", "status": "passed", "start": 1666593095227, "stop": 1666593096212}, {"name": "Заполнить форму \"Ввод данных\"", "status": "passed", "steps": [{"name": "Заполнить поле \"ФИО страхователя\"", "status": "passed", "steps": [{"name": "Ввести значение: Данилова Татьяна Олеговна", "status": "passed", "start": 1666593096213, "stop": 1666593096821}], "parameters": [{"name": "value", "value": "'Данилова Татьяна Олеговна'"}], "start": 1666593096213, "stop": 1666593096821}, {"name": "Заполнить поле \"Дата рождения страхователя\"", "status": "passed", "steps": [{"name": "Ввести значение: 15.06.1970", "status": "passed", "start": 1666593096821, "stop": 1666593097075}], "parameters": [{"name": "value", "value": "'15.06.1970'"}], "start": 1666593096821, "stop": 1666593097075}, {"name": "Заполнить поле \"Серия/номер паспорта страхователя\"", "status": "passed", "steps": [{"name": "Ввести значение: 2346-967625", "status": "passed", "start": 1666593097075, "stop": 1666593097113}], "parameters": [{"name": "value", "value": "'2346-967625'"}], "start": 1666593097075, "stop": 1666593097113}, {"name": "Заполнить поле \"Дата выдачи\"", "status": "passed", "steps": [{"name": "Ввести значение: 04.06.2012", "status": "passed", "start": 1666593097113, "stop": 1666593097193}], "parameters": [{"name": "value", "value": "'04.06.2012'"}], "start": 1666593097113, "stop": 1666593097193}, {"name": "Заполнить поле \"Адрес регистрации\"", "status": "passed", "steps": [{"name": "Ввести значение: ст. Армавир, бул. Журавлева, д. 83 к. 7/2, 222565", "status": "passed", "start": 1666593097194, "stop": 1666593097581}], "parameters": [{"name": "value", "value": "'ст. Армавир, бул. Журавлева, д. 83 к. 7/2, 222565'"}], "start": 1666593097194, "stop": 1666593097581}, {"name": "Заполнить поле \"Телефон\"", "status": "passed", "steps": [{"name": "Ввести значение: +7(744)-647-37-36", "status": "passed", "start": 1666593097581, "stop": 1666593097821}], "parameters": [{"name": "value", "value": "'+7(744)-647-37-36'"}], "start": 1666593097581, "stop": 1666593097821}, {"name": "Заполнить поле \"Email\"", "status": "passed", "steps": [{"name": "Ввести значение: sazonovsamson@oao.ru", "status": "passed", "start": 1666593097821, "stop": 1666593098046}], "parameters": [{"name": "value", "value": "'sazonovsamson@oao.ru'"}], "start": 1666593097821, "stop": 1666593098046}, {"name": "Заполнить поле \"ФИО застрахованного\"", "status": "passed", "steps": [{"name": "Ввести значение: Алевтина Степановна Горбунова", "status": "passed", "start": 1666593098230, "stop": 1666593098578}], "parameters": [{"name": "value", "value": "'Алевтина Степановна Горбунова'"}], "start": 1666593098229, "stop": 1666593098578}, {"name": "Заполнить поле \"Дата рождения застрахованного\"", "status": "passed", "steps": [{"name": "Ввести значение: 24.10.2019", "status": "passed", "start": 1666593098579, "stop": 1666593098627}], "parameters": [{"name": "value", "value": "'24.10.2019'"}], "start": 1666593098579, "stop": 1666593098627}, {"name": "Заполнить поле \"Серия/номер паспорта застрахованного\"", "status": "passed", "parameters": [{"name": "value", "value": "None"}], "start": 1666593098627, "stop": 1666593098628}, {"name": "Заполнить поле \"Дата выдачи\" у застрахованного", "status": "passed", "parameters": [{"name": "value", "value": "None"}], "start": 1666593098628, "stop": 1666593098628}], "parameters": [{"name": "value", "value": "FormData(fio='Данилова Татьяна Олеговна', birthday='15.06.1970', doc_data='2346-967625', doc_issue_date='04.06.2012', registration_address='ст. Армавир, бул. Журавлева, д. 83 к. 7/2, 222565', phone='+7(744)-647-37-36', email='sazonovsamson@oao.ru', add_person=False, name_insured='Алевтина Степановна Горбунова', date_birth_insured='24.10.2019', id_insured=None, id_dateInsured=None)"}], "start": 1666593096213, "stop": 1666593098628}, {"name": "Нажать кнопку \"Перейти к оплате\"", "status": "passed", "steps": [{"name": "Ожидание прогрузки страницы", "status": "passed", "start": 1666593098772, "stop": 1666593107491}], "start": 1666593098628, "stop": 1666593107491}, {"name": "Проверить название текущего шага.", "status": "failed", "statusDetails": {"message": "selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 4s, while waiting for:\nbrowser.element(('css selector', '.calc-steps-desktop li.current span')).has text 3. Оплата\n\nReason: AssertionError: actual text: 2. Ввод данных\n\n", "trace": "  File \"C:\\Users\\alpik\\.virtualenvs\\absolutins\\lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\alpik\\PycharmProjects\\absolutins\\core\\pages\\coronavirus_insurance_policy_page.py\", line 80, in assure_current_step_name\n    self._current_step_text.should(have.text(value))\n  File \"C:\\Users\\alpik\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\entity.py\", line 539, in should\n    super().should(condition)\n  File \"C:\\Users\\alpik\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\entity.py\", line 126, in should\n    self.wait.for_(condition)\n  File \"C:\\Users\\alpik\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\wait.py\", line 125, in for_\n    raise self._hook_failure(failure)\n"}, "steps": [{"name": "Скролл к началу страницы", "status": "passed", "start": 1666593107491, "stop": 1666593107507}, {"name": "Текущий активный шаг: 3. Оплата", "status": "failed", "statusDetails": {"message": "selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 4s, while waiting for:\nbrowser.element(('css selector', '.calc-steps-desktop li.current span')).has text 3. Оплата\n\nReason: AssertionError: actual text: 2. Ввод данных\n\n", "trace": "  File \"C:\\Users\\alpik\\PycharmProjects\\absolutins\\core\\pages\\coronavirus_insurance_policy_page.py\", line 80, in assure_current_step_name\n    self._current_step_text.should(have.text(value))\n  File \"C:\\Users\\alpik\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\entity.py\", line 539, in should\n    super().should(condition)\n  File \"C:\\Users\\alpik\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\entity.py\", line 126, in should\n    self.wait.for_(condition)\n  File \"C:\\Users\\alpik\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\wait.py\", line 125, in for_\n    raise self._hook_failure(failure)\n"}, "start": 1666593107507, "stop": 1666593111524}], "parameters": [{"name": "value", "value": "'3. Оплата'"}], "start": 1666593107491, "stop": 1666593111525}], "attachments": [{"name": "failure-screenshot", "source": "1491e4e4-c678-4130-80fd-7bec8714480c-attachment.png", "type": "image/png"}, {"name": "js-console-log", "source": "563b50e6-2188-4390-a45f-fc46c35c06b8-attachment.txt", "type": "text/plain"}, {"name": "driver-log", "source": "2c2d5222-c9d5-49d4-a503-c116bd512902-attachment.txt", "type": "text/plain"}, {"name": "log", "source": "edb75003-7859-41ea-886a-44d4455f3c45-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "392967f0-8ae2-4736-b142-6009d56621fb-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "0e970ebc-4ba8-416a-bef2-e0607e7a6ba1-attachment.txt", "type": "text/plain"}], "start": 1666593090270, "stop": 1666593111526, "uuid": "156b8813-107a-4436-90eb-9ce8b933be71", "historyId": "043b024a513f351e5ffd096e078aae04", "testCaseId": "612b83fc23c3335beded82129ca49794", "fullName": "ui.test_form_data.TestCalculateForm#test_open_payment_form_add_person_without_passport", "labels": [{"name": "subSuite", "value": "Ввод данных"}, {"name": "suite", "value": "Форма покупки полиса"}, {"name": "parentSuite", "value": "Регрессионное тестирование"}, {"name": "tag", "value": "regress"}, {"name": "tag", "value": "@pytest.mark.usefixtures('web_browser')"}, {"name": "host", "value": "DESKTOP-GMLT5VV"}, {"name": "thread", "value": "22688-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "ui.test_form_data"}]}