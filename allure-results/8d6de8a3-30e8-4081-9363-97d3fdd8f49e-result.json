{"name": "Переход на вкладку Оплата. Страхователь не является застрахованным. Страховая сумма 500000.Застрахованный имеет паспорт", "status": "failed", "statusDetails": {"message": "selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 4s, while waiting for:\nbrowser.element(('css selector', '.calc-steps-desktop li.current span')).has text 3. Оплата\n\nReason: AssertionError: actual text: 2. Ввод данных", "trace": "self = <selene.core.wait.Wait object at 0x0000022AD6C63280>, fn = <selene.core.conditions.ElementCondition object at 0x0000022AD6C632B0>\n\n    def for_(self, fn: Callable[[E], R]) -> R:\n        finish_time = time.time() + self._timeout\n    \n        while True:\n            try:\n>               return fn(self._entity)\n\nentity     = <selene.core.entity.Element object at 0x0000022AD6C61150>\nfailure    = TimeoutException(\"\\n\\nTimed out after 4s, while waiting for:\\nbrowser.element(('css selector', '.calc-steps-desktop li.current span')).has text 3. Оплата\\n\\nReason: AssertionError: actual text: 2. Ввод данных\")\nfinish_time = 1666593082.4238472\nfn         = <selene.core.conditions.ElementCondition object at 0x0000022AD6C632B0>\nreason_message = 'actual text: 2. Ввод данных'\nreason_string = 'AssertionError: actual text: 2. Ввод данных'\nself       = <selene.core.wait.Wait object at 0x0000022AD6C63280>\ntimeout    = 4\n\n..\\..\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\wait.py:102: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selene.core.conditions.ElementCondition object at 0x0000022AD6C632B0>, entity = <selene.core.entity.Element object at 0x0000022AD6C61150>\n\n    def __call__(self, entity: E) -> None:\n>       return self._fn(entity)\n\nentity     = <selene.core.entity.Element object at 0x0000022AD6C61150>\nself       = <selene.core.conditions.ElementCondition object at 0x0000022AD6C632B0>\n\n..\\..\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\condition.py:151: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nentity = <selene.core.entity.Element object at 0x0000022AD6C61150>\n\n    def fn(entity: E) -> None:\n        query_to_str = str(query)\n        result = (\n            query.__name__\n            if query_to_str.startswith('<function')\n            else query_to_str\n        )\n        actual = query(entity)\n        if not predicate(actual):\n>           raise AssertionError(f'actual {result}: {actual}')\nE           AssertionError: actual text: 2. Ввод данных\n\nactual     = '2. Ввод данных'\nentity     = <selene.core.entity.Element object at 0x0000022AD6C61150>\npredicate  = <function includes.<locals>.fn at 0x0000022AD547B1C0>\nquery      = <selene.core.wait.Query object at 0x0000022AD5B4D150>\nquery_to_str = 'text'\nresult     = 'text'\n\n..\\..\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\condition.py:124: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.ui.test_form_data.TestCalculateForm object at 0x0000022AD68588E0>\nopen_policy_purchase_form_go_to_data_tab = <function open_policy_purchase_form_go_to_data_tab.<locals>._open at 0x0000022AD547AD40>\n\n    @allure.title('Переход на вкладку Оплата. Страхователь не является застрахованным. Страховая сумма 500000.'\n                  'Застрахованный имеет паспорт')\n    def test_open_payment_form_add_person_with_passport(self, open_policy_purchase_form_go_to_data_tab):\n        test_data = FormDataBuilder().random_without_add_person().build()\n    \n        policy_form_page = open_policy_purchase_form_go_to_data_tab()\n        policy_form_page.fill_form_data(test_data)\n        policy_form_page.click_on_go_to_payments_tab()\n>       policy_form_page.assure_current_step_name(StepNameData.STEP_PAYMENT)\n\nopen_policy_purchase_form_go_to_data_tab = <function open_policy_purchase_form_go_to_data_tab.<locals>._open at 0x0000022AD547AD40>\npolicy_form_page = <core.pages.coronavirus_insurance_policy_page.CoronavirusInsurancePolicyPage object at 0x0000022AD6C604C0>\nself       = <tests.ui.test_form_data.TestCalculateForm object at 0x0000022AD68588E0>\ntest_data  = FormData(fio='Терентий Владленович Никонов', birthday='11.06.1971', doc_data='9828-262132', doc_issue_date='02.06.2012...'Степанов Вышеслав Феликсович', date_birth_insured='07.01.1979', id_insured='2403-385020', id_dateInsured='02.11.2011')\n\ntests\\ui\\test_form_data.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncore\\pages\\coronavirus_insurance_policy_page.py:80: in assure_current_step_name\n    self._current_step_text.should(have.text(value))\n        self       = <core.pages.coronavirus_insurance_policy_page.CoronavirusInsurancePolicyPage object at 0x0000022AD6C604C0>\n        value      = <StepNameData.STEP_PAYMENT: '3. Оплата'>\n..\\..\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\entity.py:539: in should\n    super().should(condition)\n        __class__  = <class 'selene.core.entity.Element'>\n        condition  = <selene.core.conditions.ElementCondition object at 0x0000022AD6C632B0>\n        self       = <selene.core.entity.Element object at 0x0000022AD6C61150>\n        timeout    = None\n..\\..\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\entity.py:126: in should\n    self.wait.for_(condition)\n        condition  = <selene.core.conditions.ElementCondition object at 0x0000022AD6C632B0>\n        self       = <selene.core.entity.Element object at 0x0000022AD6C61150>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selene.core.wait.Wait object at 0x0000022AD6C63280>, fn = <selene.core.conditions.ElementCondition object at 0x0000022AD6C632B0>\n\n        def for_(self, fn: Callable[[E], R]) -> R:\n            finish_time = time.time() + self._timeout\n    \n            while True:\n                try:\n                    return fn(self._entity)\n                except Exception as reason:\n                    if time.time() > finish_time:\n    \n                        reason_message = str(reason)\n    \n                        reason_string = '{name}: {message}'.format(\n                            name=reason.__class__.__name__, message=reason_message\n                        )\n                        # todo: think on how can we improve logging failures in selene, e.g. reverse msg and stacktrace\n                        # stacktrace = getattr(reason, 'stacktrace', None)\n                        timeout = self._timeout\n                        entity = self._entity\n    \n                        failure = TimeoutException(\n                            f'''\n    \n    Timed out after {timeout}s, while waiting for:\n    {entity}.{fn}\n    \n    Reason: {reason_string}'''\n                        )\n    \n>                       raise self._hook_failure(failure)\nE                       selene.core.exceptions.TimeoutException: Message: \nE                       \nE                       Timed out after 4s, while waiting for:\nE                       browser.element(('css selector', '.calc-steps-desktop li.current span')).has text 3. Оплата\nE                       \nE                       Reason: AssertionError: actual text: 2. Ввод данных\n\nentity     = <selene.core.entity.Element object at 0x0000022AD6C61150>\nfailure    = TimeoutException(\"\\n\\nTimed out after 4s, while waiting for:\\nbrowser.element(('css selector', '.calc-steps-desktop li.current span')).has text 3. Оплата\\n\\nReason: AssertionError: actual text: 2. Ввод данных\")\nfinish_time = 1666593082.4238472\nfn         = <selene.core.conditions.ElementCondition object at 0x0000022AD6C632B0>\nreason_message = 'actual text: 2. Ввод данных'\nreason_string = 'AssertionError: actual text: 2. Ввод данных'\nself       = <selene.core.wait.Wait object at 0x0000022AD6C63280>\ntimeout    = 4\n\n..\\..\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\wait.py:125: TimeoutException"}, "steps": [{"name": "Переход по адресу: \"https://old.absolutins.ru/kupit-strahovoj-polis/strahovanie-zhizni-i-zdorovya/zashchita-ot-virusa/\"", "status": "passed", "start": 1666593060614, "stop": 1666593065880}, {"name": "Выбрать чекбокс \"Подтверждаю, что -  Отсутствуют лица, проживающие совместно с Застрахованным, у которых диагностирована коронавирусная инфекция COVID-2019 ( код заболевания по МКБ-10 – В 34.2.)\".", "status": "passed", "start": 1666593065880, "stop": 1666593066433}, {"name": "Нажать кнопку \"Продолжить\".", "status": "passed", "start": 1666593066434, "stop": 1666593067052}, {"name": "Заполнить форму \"Ввод данных\"", "status": "passed", "steps": [{"name": "Заполнить поле \"ФИО страхователя\"", "status": "passed", "steps": [{"name": "Ввести значение: Терентий Владленович Никонов", "status": "passed", "start": 1666593067053, "stop": 1666593067662}], "parameters": [{"name": "value", "value": "'Терентий Владленович Никонов'"}], "start": 1666593067053, "stop": 1666593067662}, {"name": "Заполнить поле \"Дата рождения страхователя\"", "status": "passed", "steps": [{"name": "Ввести значение: 11.06.1971", "status": "passed", "start": 1666593067662, "stop": 1666593067895}], "parameters": [{"name": "value", "value": "'11.06.1971'"}], "start": 1666593067662, "stop": 1666593067895}, {"name": "Заполнить поле \"Серия/номер паспорта страхователя\"", "status": "passed", "steps": [{"name": "Ввести значение: 9828-262132", "status": "passed", "start": 1666593067896, "stop": 1666593067961}], "parameters": [{"name": "value", "value": "'9828-262132'"}], "start": 1666593067896, "stop": 1666593067961}, {"name": "Заполнить поле \"Дата выдачи\"", "status": "passed", "steps": [{"name": "Ввести значение: 02.06.2012", "status": "passed", "start": 1666593067961, "stop": 1666593068027}], "parameters": [{"name": "value", "value": "'02.06.2012'"}], "start": 1666593067961, "stop": 1666593068027}, {"name": "Заполнить поле \"Адрес регистрации\"", "status": "passed", "steps": [{"name": "Ввести значение: с. Агата, бул. Коммунаров, д. 19 стр. 42, 117164", "status": "passed", "start": 1666593068027, "stop": 1666593068665}], "parameters": [{"name": "value", "value": "'с. Агата, бул. Коммунаров, д. 19 стр. 42, 117164'"}], "start": 1666593068027, "stop": 1666593068665}, {"name": "Заполнить поле \"Телефон\"", "status": "passed", "steps": [{"name": "Ввести значение: +7(988)-462-99-63", "status": "passed", "start": 1666593068666, "stop": 1666593068951}], "parameters": [{"name": "value", "value": "'+7(988)-462-99-63'"}], "start": 1666593068666, "stop": 1666593068951}, {"name": "Заполнить поле \"Email\"", "status": "passed", "steps": [{"name": "Ввести значение: bfilatova@ooo.edu", "status": "passed", "start": 1666593068952, "stop": 1666593069215}], "parameters": [{"name": "value", "value": "'bfilatova@ooo.edu'"}], "start": 1666593068952, "stop": 1666593069215}, {"name": "Заполнить поле \"ФИО застрахованного\"", "status": "passed", "steps": [{"name": "Ввести значение: Степанов Вышеслав Феликсович", "status": "passed", "start": 1666593069427, "stop": 1666593069858}], "parameters": [{"name": "value", "value": "'Степанов Вышеслав Феликсович'"}], "start": 1666593069427, "stop": 1666593069858}, {"name": "Заполнить поле \"Дата рождения застрахованного\"", "status": "passed", "steps": [{"name": "Ввести значение: 07.01.1979", "status": "passed", "start": 1666593069858, "stop": 1666593069914}], "parameters": [{"name": "value", "value": "'07.01.1979'"}], "start": 1666593069858, "stop": 1666593069914}, {"name": "Заполнить поле \"Серия/номер паспорта застрахованного\"", "status": "passed", "steps": [{"name": "Ввести значение: 2403-385020", "status": "passed", "start": 1666593069914, "stop": 1666593069947}], "parameters": [{"name": "value", "value": "'2403-385020'"}], "start": 1666593069914, "stop": 1666593069947}, {"name": "Заполнить поле \"Дата выдачи\" у застрахованного", "status": "passed", "steps": [{"name": "Ввести значение: 02.11.2011", "status": "passed", "start": 1666593069948, "stop": 1666593070014}], "parameters": [{"name": "value", "value": "'02.11.2011'"}], "start": 1666593069948, "stop": 1666593070014}], "parameters": [{"name": "value", "value": "FormData(fio='Терентий Владленович Никонов', birthday='11.06.1971', doc_data='9828-262132', doc_issue_date='02.06.2012', registration_address='с. Агата, бул. Коммунаров, д. 19 стр. 42, 117164', phone='+7(988)-462-99-63', email='bfilatova@ooo.edu', add_person=False, name_insured='Степанов Вышеслав Феликсович', date_birth_insured='07.01.1979', id_insured='2403-385020', id_dateInsured='02.11.2011')"}], "start": 1666593067052, "stop": 1666593070014}, {"name": "Нажать кнопку \"Перейти к оплате\"", "status": "passed", "steps": [{"name": "Ожидание прогрузки страницы", "status": "passed", "start": 1666593070131, "stop": 1666593078380}], "start": 1666593070014, "stop": 1666593078380}, {"name": "Проверить название текущего шага.", "status": "failed", "statusDetails": {"message": "selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 4s, while waiting for:\nbrowser.element(('css selector', '.calc-steps-desktop li.current span')).has text 3. Оплата\n\nReason: AssertionError: actual text: 2. Ввод данных\n\n", "trace": "  File \"C:\\Users\\alpik\\.virtualenvs\\absolutins\\lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\alpik\\PycharmProjects\\absolutins\\core\\pages\\coronavirus_insurance_policy_page.py\", line 80, in assure_current_step_name\n    self._current_step_text.should(have.text(value))\n  File \"C:\\Users\\alpik\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\entity.py\", line 539, in should\n    super().should(condition)\n  File \"C:\\Users\\alpik\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\entity.py\", line 126, in should\n    self.wait.for_(condition)\n  File \"C:\\Users\\alpik\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\wait.py\", line 125, in for_\n    raise self._hook_failure(failure)\n"}, "steps": [{"name": "Скролл к началу страницы", "status": "passed", "start": 1666593078380, "stop": 1666593078424}, {"name": "Текущий активный шаг: 3. Оплата", "status": "failed", "statusDetails": {"message": "selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 4s, while waiting for:\nbrowser.element(('css selector', '.calc-steps-desktop li.current span')).has text 3. Оплата\n\nReason: AssertionError: actual text: 2. Ввод данных\n\n", "trace": "  File \"C:\\Users\\alpik\\PycharmProjects\\absolutins\\core\\pages\\coronavirus_insurance_policy_page.py\", line 80, in assure_current_step_name\n    self._current_step_text.should(have.text(value))\n  File \"C:\\Users\\alpik\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\entity.py\", line 539, in should\n    super().should(condition)\n  File \"C:\\Users\\alpik\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\entity.py\", line 126, in should\n    self.wait.for_(condition)\n  File \"C:\\Users\\alpik\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\wait.py\", line 125, in for_\n    raise self._hook_failure(failure)\n"}, "start": 1666593078424, "stop": 1666593082425}], "parameters": [{"name": "value", "value": "'3. Оплата'"}], "start": 1666593078380, "stop": 1666593082426}], "attachments": [{"name": "failure-screenshot", "source": "1533e3d3-055e-4f88-877c-7791b1cc2bb2-attachment.png", "type": "image/png"}, {"name": "js-console-log", "source": "eab0d2f3-fd43-4116-aba0-4536bf375fa8-attachment.txt", "type": "text/plain"}, {"name": "driver-log", "source": "c034fe39-1edd-4ce8-8b4d-26ab800ecd20-attachment.txt", "type": "text/plain"}, {"name": "log", "source": "2f9d2df9-ee72-4e10-b294-17f94eabe76c-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "013f1ab0-a27e-42e6-b77f-d461f631b2e2-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "782e2efe-7761-4bfc-a2fc-f3e389ec7c10-attachment.txt", "type": "text/plain"}], "start": 1666593060417, "stop": 1666593082426, "uuid": "e1a9ddd4-44df-429f-b148-9923c08c5656", "historyId": "d139d281355db82b6a20f86ff8c6f462", "testCaseId": "0033400f6bf4e3ba903e4016626d4307", "fullName": "ui.test_form_data.TestCalculateForm#test_open_payment_form_add_person_with_passport", "labels": [{"name": "subSuite", "value": "Ввод данных"}, {"name": "suite", "value": "Форма покупки полиса"}, {"name": "parentSuite", "value": "Регрессионное тестирование"}, {"name": "tag", "value": "regress"}, {"name": "tag", "value": "@pytest.mark.usefixtures('web_browser')"}, {"name": "host", "value": "DESKTOP-GMLT5VV"}, {"name": "thread", "value": "22688-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "ui.test_form_data"}]}