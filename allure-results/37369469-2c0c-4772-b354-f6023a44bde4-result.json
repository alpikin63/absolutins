{"name": "Переход на вкладку Оплата. Страхователь не является застрахованным. Страховая сумма 100000.Застрахованный не имеет паспорт", "status": "failed", "statusDetails": {"message": "selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 4s, while waiting for:\nbrowser.element(('css selector', '.calc-steps-desktop li.current span')).has text 3. Оплата\n\nReason: AssertionError: actual text: 2. Ввод данных", "trace": "self = <selene.core.wait.Wait object at 0x0000022AD53AED70>, fn = <selene.core.conditions.ElementCondition object at 0x0000022AD53AF820>\n\n    def for_(self, fn: Callable[[E], R]) -> R:\n        finish_time = time.time() + self._timeout\n    \n        while True:\n            try:\n>               return fn(self._entity)\n\nentity     = <selene.core.entity.Element object at 0x0000022AD6C62080>\nfailure    = TimeoutException(\"\\n\\nTimed out after 4s, while waiting for:\\nbrowser.element(('css selector', '.calc-steps-desktop li.current span')).has text 3. Оплата\\n\\nReason: AssertionError: actual text: 2. Ввод данных\")\nfinish_time = 1666593192.5271907\nfn         = <selene.core.conditions.ElementCondition object at 0x0000022AD53AF820>\nreason_message = 'actual text: 2. Ввод данных'\nreason_string = 'AssertionError: actual text: 2. Ввод данных'\nself       = <selene.core.wait.Wait object at 0x0000022AD53AED70>\ntimeout    = 4\n\n..\\..\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\wait.py:102: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selene.core.conditions.ElementCondition object at 0x0000022AD53AF820>, entity = <selene.core.entity.Element object at 0x0000022AD6C62080>\n\n    def __call__(self, entity: E) -> None:\n>       return self._fn(entity)\n\nentity     = <selene.core.entity.Element object at 0x0000022AD6C62080>\nself       = <selene.core.conditions.ElementCondition object at 0x0000022AD53AF820>\n\n..\\..\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\condition.py:151: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nentity = <selene.core.entity.Element object at 0x0000022AD6C62080>\n\n    def fn(entity: E) -> None:\n        query_to_str = str(query)\n        result = (\n            query.__name__\n            if query_to_str.startswith('<function')\n            else query_to_str\n        )\n        actual = query(entity)\n        if not predicate(actual):\n>           raise AssertionError(f'actual {result}: {actual}')\nE           AssertionError: actual text: 2. Ввод данных\n\nactual     = '2. Ввод данных'\nentity     = <selene.core.entity.Element object at 0x0000022AD6C62080>\npredicate  = <function includes.<locals>.fn at 0x0000022AD6C6C040>\nquery      = <selene.core.wait.Query object at 0x0000022AD5B4D150>\nquery_to_str = 'text'\nresult     = 'text'\n\n..\\..\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\condition.py:124: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.ui.test_form_data.TestCalculateForm object at 0x0000022AD6859120>\nopen_policy_purchase_form_go_to_data_tab = <function open_policy_purchase_form_go_to_data_tab.<locals>._open at 0x0000022AD6C6E200>\n\n    @allure.title('Переход на вкладку Оплата. Страхователь не является застрахованным. Страховая сумма 100000.'\n                  'Застрахованный не имеет паспорт')\n    def test_open_payment_form_add_person_without_passport_change_sum(self, open_policy_purchase_form_go_to_data_tab):\n        start_date = datetime.now()\n        result_date = start_date - timedelta(days=1096)\n    \n        test_data = FormDataBuilder() \\\n            .random_without_add_person() \\\n            .but() \\\n            .with_date_birth_insured(result_date.strftime('%d.%m.%Y')) \\\n            .with_id_insured(None) \\\n            .with_id_date_insured(None) \\\n            .build()\n    \n        policy_form_page = open_policy_purchase_form_go_to_data_tab(change_sum=True)\n        policy_form_page.fill_form_data(test_data)\n        policy_form_page.click_on_go_to_payments_tab()\n>       policy_form_page.assure_current_step_name(StepNameData.STEP_PAYMENT)\n\nopen_policy_purchase_form_go_to_data_tab = <function open_policy_purchase_form_go_to_data_tab.<locals>._open at 0x0000022AD6C6E200>\npolicy_form_page = <core.pages.coronavirus_insurance_policy_page.CoronavirusInsurancePolicyPage object at 0x0000022AD53AE5F0>\nresult_date = datetime.datetime(2019, 10, 24, 9, 32, 49, 803706)\nself       = <tests.ui.test_form_data.TestCalculateForm object at 0x0000022AD6859120>\nstart_date = datetime.datetime(2022, 10, 24, 9, 32, 49, 803706)\ntest_data  = FormData(fio='Ангелина Захаровна Сидорова', birthday='13.10.1991', doc_data='1542-427636', doc_issue_date='24.11.2017'...n=False, name_insured='Лебедева Лидия Петровна', date_birth_insured='24.10.2019', id_insured=None, id_dateInsured=None)\n\ntests\\ui\\test_form_data.py:89: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncore\\pages\\coronavirus_insurance_policy_page.py:80: in assure_current_step_name\n    self._current_step_text.should(have.text(value))\n        self       = <core.pages.coronavirus_insurance_policy_page.CoronavirusInsurancePolicyPage object at 0x0000022AD53AE5F0>\n        value      = <StepNameData.STEP_PAYMENT: '3. Оплата'>\n..\\..\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\entity.py:539: in should\n    super().should(condition)\n        __class__  = <class 'selene.core.entity.Element'>\n        condition  = <selene.core.conditions.ElementCondition object at 0x0000022AD53AF820>\n        self       = <selene.core.entity.Element object at 0x0000022AD6C62080>\n        timeout    = None\n..\\..\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\entity.py:126: in should\n    self.wait.for_(condition)\n        condition  = <selene.core.conditions.ElementCondition object at 0x0000022AD53AF820>\n        self       = <selene.core.entity.Element object at 0x0000022AD6C62080>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selene.core.wait.Wait object at 0x0000022AD53AED70>, fn = <selene.core.conditions.ElementCondition object at 0x0000022AD53AF820>\n\n        def for_(self, fn: Callable[[E], R]) -> R:\n            finish_time = time.time() + self._timeout\n    \n            while True:\n                try:\n                    return fn(self._entity)\n                except Exception as reason:\n                    if time.time() > finish_time:\n    \n                        reason_message = str(reason)\n    \n                        reason_string = '{name}: {message}'.format(\n                            name=reason.__class__.__name__, message=reason_message\n                        )\n                        # todo: think on how can we improve logging failures in selene, e.g. reverse msg and stacktrace\n                        # stacktrace = getattr(reason, 'stacktrace', None)\n                        timeout = self._timeout\n                        entity = self._entity\n    \n                        failure = TimeoutException(\n                            f'''\n    \n    Timed out after {timeout}s, while waiting for:\n    {entity}.{fn}\n    \n    Reason: {reason_string}'''\n                        )\n    \n>                       raise self._hook_failure(failure)\nE                       selene.core.exceptions.TimeoutException: Message: \nE                       \nE                       Timed out after 4s, while waiting for:\nE                       browser.element(('css selector', '.calc-steps-desktop li.current span')).has text 3. Оплата\nE                       \nE                       Reason: AssertionError: actual text: 2. Ввод данных\n\nentity     = <selene.core.entity.Element object at 0x0000022AD6C62080>\nfailure    = TimeoutException(\"\\n\\nTimed out after 4s, while waiting for:\\nbrowser.element(('css selector', '.calc-steps-desktop li.current span')).has text 3. Оплата\\n\\nReason: AssertionError: actual text: 2. Ввод данных\")\nfinish_time = 1666593192.5271907\nfn         = <selene.core.conditions.ElementCondition object at 0x0000022AD53AF820>\nreason_message = 'actual text: 2. Ввод данных'\nreason_string = 'AssertionError: actual text: 2. Ввод данных'\nself       = <selene.core.wait.Wait object at 0x0000022AD53AED70>\ntimeout    = 4\n\n..\\..\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\wait.py:125: TimeoutException"}, "steps": [{"name": "Переход по адресу: \"https://old.absolutins.ru/kupit-strahovoj-polis/strahovanie-zhizni-i-zdorovya/zashchita-ot-virusa/\"", "status": "passed", "start": 1666593170025, "stop": 1666593173682}, {"name": "Выбрать страховую сумму полиса.", "status": "passed", "steps": [{"name": "выбрать сумму: 100000", "status": "passed", "start": 1666593173682, "stop": 1666593175149}], "parameters": [{"name": "sum_value", "value": "100000"}], "start": 1666593173682, "stop": 1666593175149}, {"name": "Выбрать чекбокс \"Подтверждаю, что -  Отсутствуют лица, проживающие совместно с Застрахованным, у которых диагностирована коронавирусная инфекция COVID-2019 ( код заболевания по МКБ-10 – В 34.2.)\".", "status": "passed", "start": 1666593175149, "stop": 1666593175949}, {"name": "Нажать кнопку \"Продолжить\".", "status": "passed", "start": 1666593175949, "stop": 1666593176468}, {"name": "Заполнить форму \"Ввод данных\"", "status": "passed", "steps": [{"name": "Заполнить поле \"ФИО страхователя\"", "status": "passed", "steps": [{"name": "Ввести значение: Ангелина Захаровна Сидорова", "status": "passed", "start": 1666593176469, "stop": 1666593177600}], "parameters": [{"name": "value", "value": "'Ангелина Захаровна Сидорова'"}], "start": 1666593176469, "stop": 1666593177600}, {"name": "Заполнить поле \"Дата рождения страхователя\"", "status": "passed", "steps": [{"name": "Ввести значение: 13.10.1991", "status": "passed", "start": 1666593177600, "stop": 1666593177743}], "parameters": [{"name": "value", "value": "'13.10.1991'"}], "start": 1666593177600, "stop": 1666593177743}, {"name": "Заполнить поле \"Серия/номер паспорта страхователя\"", "status": "passed", "steps": [{"name": "Ввести значение: 1542-427636", "status": "passed", "start": 1666593177744, "stop": 1666593177780}], "parameters": [{"name": "value", "value": "'1542-427636'"}], "start": 1666593177743, "stop": 1666593177780}, {"name": "Заполнить поле \"Дата выдачи\"", "status": "passed", "steps": [{"name": "Ввести значение: 24.11.2017", "status": "passed", "start": 1666593177780, "stop": 1666593177852}], "parameters": [{"name": "value", "value": "'24.11.2017'"}], "start": 1666593177780, "stop": 1666593177852}, {"name": "Заполнить поле \"Адрес регистрации\"", "status": "passed", "steps": [{"name": "Ввести значение: п. Смирных, пр. Угольный, д. 499, 486601", "status": "passed", "start": 1666593177852, "stop": 1666593178296}], "parameters": [{"name": "value", "value": "'п. Смирных, пр. Угольный, д. 499, 486601'"}], "start": 1666593177852, "stop": 1666593178296}, {"name": "Заполнить поле \"Телефон\"", "status": "passed", "steps": [{"name": "Ввести значение: +7(769)-500-26-91", "status": "passed", "start": 1666593178296, "stop": 1666593178621}], "parameters": [{"name": "value", "value": "'+7(769)-500-26-91'"}], "start": 1666593178296, "stop": 1666593178621}, {"name": "Заполнить поле \"Email\"", "status": "passed", "steps": [{"name": "Ввести значение: sazonovazinaida@oao.ru", "status": "passed", "start": 1666593178622, "stop": 1666593179129}], "parameters": [{"name": "value", "value": "'sazonovazinaida@oao.ru'"}], "start": 1666593178621, "stop": 1666593179129}, {"name": "Заполнить поле \"ФИО застрахованного\"", "status": "passed", "steps": [{"name": "Ввести значение: Лебедева Лидия Петровна", "status": "passed", "start": 1666593179344, "stop": 1666593179615}], "parameters": [{"name": "value", "value": "'Лебедева Лидия Петровна'"}], "start": 1666593179344, "stop": 1666593179615}, {"name": "Заполнить поле \"Дата рождения застрахованного\"", "status": "passed", "steps": [{"name": "Ввести значение: 24.10.2019", "status": "passed", "start": 1666593179616, "stop": 1666593179669}], "parameters": [{"name": "value", "value": "'24.10.2019'"}], "start": 1666593179615, "stop": 1666593179669}, {"name": "Заполнить поле \"Серия/номер паспорта застрахованного\"", "status": "passed", "parameters": [{"name": "value", "value": "None"}], "start": 1666593179670, "stop": 1666593179670}, {"name": "Заполнить поле \"Дата выдачи\" у застрахованного", "status": "passed", "parameters": [{"name": "value", "value": "None"}], "start": 1666593179670, "stop": 1666593179670}], "parameters": [{"name": "value", "value": "FormData(fio='Ангелина Захаровна Сидорова', birthday='13.10.1991', doc_data='1542-427636', doc_issue_date='24.11.2017', registration_address='п. Смирных, пр. Угольный, д. 499, 486601', phone='+7(769)-500-26-91', email='sazonovazinaida@oao.ru', add_person=False, name_insured='Лебедева Лидия Петровна', date_birth_insured='24.10.2019', id_insured=None, id_dateInsured=None)"}], "start": 1666593176468, "stop": 1666593179670}, {"name": "Нажать кнопку \"Перейти к оплате\"", "status": "passed", "steps": [{"name": "Ожидание прогрузки страницы", "status": "passed", "start": 1666593179816, "stop": 1666593188500}], "start": 1666593179670, "stop": 1666593188500}, {"name": "Проверить название текущего шага.", "status": "failed", "statusDetails": {"message": "selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 4s, while waiting for:\nbrowser.element(('css selector', '.calc-steps-desktop li.current span')).has text 3. Оплата\n\nReason: AssertionError: actual text: 2. Ввод данных\n\n", "trace": "  File \"C:\\Users\\alpik\\.virtualenvs\\absolutins\\lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\alpik\\PycharmProjects\\absolutins\\core\\pages\\coronavirus_insurance_policy_page.py\", line 80, in assure_current_step_name\n    self._current_step_text.should(have.text(value))\n  File \"C:\\Users\\alpik\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\entity.py\", line 539, in should\n    super().should(condition)\n  File \"C:\\Users\\alpik\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\entity.py\", line 126, in should\n    self.wait.for_(condition)\n  File \"C:\\Users\\alpik\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\wait.py\", line 125, in for_\n    raise self._hook_failure(failure)\n"}, "steps": [{"name": "Скролл к началу страницы", "status": "passed", "start": 1666593188500, "stop": 1666593188526}, {"name": "Текущий активный шаг: 3. Оплата", "status": "failed", "statusDetails": {"message": "selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 4s, while waiting for:\nbrowser.element(('css selector', '.calc-steps-desktop li.current span')).has text 3. Оплата\n\nReason: AssertionError: actual text: 2. Ввод данных\n\n", "trace": "  File \"C:\\Users\\alpik\\PycharmProjects\\absolutins\\core\\pages\\coronavirus_insurance_policy_page.py\", line 80, in assure_current_step_name\n    self._current_step_text.should(have.text(value))\n  File \"C:\\Users\\alpik\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\entity.py\", line 539, in should\n    super().should(condition)\n  File \"C:\\Users\\alpik\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\entity.py\", line 126, in should\n    self.wait.for_(condition)\n  File \"C:\\Users\\alpik\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\wait.py\", line 125, in for_\n    raise self._hook_failure(failure)\n"}, "start": 1666593188526, "stop": 1666593192541}], "parameters": [{"name": "value", "value": "'3. Оплата'"}], "start": 1666593188500, "stop": 1666593192542}], "attachments": [{"name": "failure-screenshot", "source": "92922ec5-f813-4091-85bb-99830393419d-attachment.png", "type": "image/png"}, {"name": "js-console-log", "source": "e99f2dd1-07cd-46b1-8d72-584464cd70f7-attachment.txt", "type": "text/plain"}, {"name": "driver-log", "source": "7fc9bd2a-dd86-4701-b4f8-332bbabb70c1-attachment.txt", "type": "text/plain"}, {"name": "log", "source": "952c1eb5-5b48-4c59-8ee9-4e252468ac63-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "95d9d078-52ad-4983-bfbe-b8c33a8c9e09-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "a39fd7c4-200e-47be-a5b8-74ed9c25b4c7-attachment.txt", "type": "text/plain"}], "start": 1666593169804, "stop": 1666593192543, "uuid": "6882084f-5f0a-4ee6-a40b-5155ddbef2f5", "historyId": "85409ca8713f139414c551043639e216", "testCaseId": "2c074002c83f400a44003f397d17385e", "fullName": "ui.test_form_data.TestCalculateForm#test_open_payment_form_add_person_without_passport_change_sum", "labels": [{"name": "subSuite", "value": "Ввод данных"}, {"name": "suite", "value": "Форма покупки полиса"}, {"name": "parentSuite", "value": "Регрессионное тестирование"}, {"name": "tag", "value": "regress"}, {"name": "tag", "value": "@pytest.mark.usefixtures('web_browser')"}, {"name": "host", "value": "DESKTOP-GMLT5VV"}, {"name": "thread", "value": "22688-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "ui.test_form_data"}]}