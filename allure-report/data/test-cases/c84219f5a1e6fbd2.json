{
  "uid" : "c84219f5a1e6fbd2",
  "name" : "Переход на вкладку Оплата. Страхователь не является застрахованным. Страховая сумма 100000.Застрахованный не имеет паспорт",
  "fullName" : "ui.test_form_data.TestCalculateForm#test_open_payment_form_add_person_without_passport_change_sum",
  "historyId" : "85409ca8713f139414c551043639e216",
  "time" : {
    "start" : 1666593169804,
    "stop" : 1666593192543,
    "duration" : 22739
  },
  "status" : "failed",
  "statusMessage" : "selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 4s, while waiting for:\nbrowser.element(('css selector', '.calc-steps-desktop li.current span')).has text 3. Оплата\n\nReason: AssertionError: actual text: 2. Ввод данных",
  "statusTrace" : "self = <selene.core.wait.Wait object at 0x0000022AD53AED70>, fn = <selene.core.conditions.ElementCondition object at 0x0000022AD53AF820>\n\n    def for_(self, fn: Callable[[E], R]) -> R:\n        finish_time = time.time() + self._timeout\n    \n        while True:\n            try:\n>               return fn(self._entity)\n\nentity     = <selene.core.entity.Element object at 0x0000022AD6C62080>\nfailure    = TimeoutException(\"\\n\\nTimed out after 4s, while waiting for:\\nbrowser.element(('css selector', '.calc-steps-desktop li.current span')).has text 3. Оплата\\n\\nReason: AssertionError: actual text: 2. Ввод данных\")\nfinish_time = 1666593192.5271907\nfn         = <selene.core.conditions.ElementCondition object at 0x0000022AD53AF820>\nreason_message = 'actual text: 2. Ввод данных'\nreason_string = 'AssertionError: actual text: 2. Ввод данных'\nself       = <selene.core.wait.Wait object at 0x0000022AD53AED70>\ntimeout    = 4\n\n..\\..\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\wait.py:102: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selene.core.conditions.ElementCondition object at 0x0000022AD53AF820>, entity = <selene.core.entity.Element object at 0x0000022AD6C62080>\n\n    def __call__(self, entity: E) -> None:\n>       return self._fn(entity)\n\nentity     = <selene.core.entity.Element object at 0x0000022AD6C62080>\nself       = <selene.core.conditions.ElementCondition object at 0x0000022AD53AF820>\n\n..\\..\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\condition.py:151: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nentity = <selene.core.entity.Element object at 0x0000022AD6C62080>\n\n    def fn(entity: E) -> None:\n        query_to_str = str(query)\n        result = (\n            query.__name__\n            if query_to_str.startswith('<function')\n            else query_to_str\n        )\n        actual = query(entity)\n        if not predicate(actual):\n>           raise AssertionError(f'actual {result}: {actual}')\nE           AssertionError: actual text: 2. Ввод данных\n\nactual     = '2. Ввод данных'\nentity     = <selene.core.entity.Element object at 0x0000022AD6C62080>\npredicate  = <function includes.<locals>.fn at 0x0000022AD6C6C040>\nquery      = <selene.core.wait.Query object at 0x0000022AD5B4D150>\nquery_to_str = 'text'\nresult     = 'text'\n\n..\\..\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\condition.py:124: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.ui.test_form_data.TestCalculateForm object at 0x0000022AD6859120>\nopen_policy_purchase_form_go_to_data_tab = <function open_policy_purchase_form_go_to_data_tab.<locals>._open at 0x0000022AD6C6E200>\n\n    @allure.title('Переход на вкладку Оплата. Страхователь не является застрахованным. Страховая сумма 100000.'\n                  'Застрахованный не имеет паспорт')\n    def test_open_payment_form_add_person_without_passport_change_sum(self, open_policy_purchase_form_go_to_data_tab):\n        start_date = datetime.now()\n        result_date = start_date - timedelta(days=1096)\n    \n        test_data = FormDataBuilder() \\\n            .random_without_add_person() \\\n            .but() \\\n            .with_date_birth_insured(result_date.strftime('%d.%m.%Y')) \\\n            .with_id_insured(None) \\\n            .with_id_date_insured(None) \\\n            .build()\n    \n        policy_form_page = open_policy_purchase_form_go_to_data_tab(change_sum=True)\n        policy_form_page.fill_form_data(test_data)\n        policy_form_page.click_on_go_to_payments_tab()\n>       policy_form_page.assure_current_step_name(StepNameData.STEP_PAYMENT)\n\nopen_policy_purchase_form_go_to_data_tab = <function open_policy_purchase_form_go_to_data_tab.<locals>._open at 0x0000022AD6C6E200>\npolicy_form_page = <core.pages.coronavirus_insurance_policy_page.CoronavirusInsurancePolicyPage object at 0x0000022AD53AE5F0>\nresult_date = datetime.datetime(2019, 10, 24, 9, 32, 49, 803706)\nself       = <tests.ui.test_form_data.TestCalculateForm object at 0x0000022AD6859120>\nstart_date = datetime.datetime(2022, 10, 24, 9, 32, 49, 803706)\ntest_data  = FormData(fio='Ангелина Захаровна Сидорова', birthday='13.10.1991', doc_data='1542-427636', doc_issue_date='24.11.2017'...n=False, name_insured='Лебедева Лидия Петровна', date_birth_insured='24.10.2019', id_insured=None, id_dateInsured=None)\n\ntests\\ui\\test_form_data.py:89: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncore\\pages\\coronavirus_insurance_policy_page.py:80: in assure_current_step_name\n    self._current_step_text.should(have.text(value))\n        self       = <core.pages.coronavirus_insurance_policy_page.CoronavirusInsurancePolicyPage object at 0x0000022AD53AE5F0>\n        value      = <StepNameData.STEP_PAYMENT: '3. Оплата'>\n..\\..\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\entity.py:539: in should\n    super().should(condition)\n        __class__  = <class 'selene.core.entity.Element'>\n        condition  = <selene.core.conditions.ElementCondition object at 0x0000022AD53AF820>\n        self       = <selene.core.entity.Element object at 0x0000022AD6C62080>\n        timeout    = None\n..\\..\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\entity.py:126: in should\n    self.wait.for_(condition)\n        condition  = <selene.core.conditions.ElementCondition object at 0x0000022AD53AF820>\n        self       = <selene.core.entity.Element object at 0x0000022AD6C62080>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selene.core.wait.Wait object at 0x0000022AD53AED70>, fn = <selene.core.conditions.ElementCondition object at 0x0000022AD53AF820>\n\n        def for_(self, fn: Callable[[E], R]) -> R:\n            finish_time = time.time() + self._timeout\n    \n            while True:\n                try:\n                    return fn(self._entity)\n                except Exception as reason:\n                    if time.time() > finish_time:\n    \n                        reason_message = str(reason)\n    \n                        reason_string = '{name}: {message}'.format(\n                            name=reason.__class__.__name__, message=reason_message\n                        )\n                        # todo: think on how can we improve logging failures in selene, e.g. reverse msg and stacktrace\n                        # stacktrace = getattr(reason, 'stacktrace', None)\n                        timeout = self._timeout\n                        entity = self._entity\n    \n                        failure = TimeoutException(\n                            f'''\n    \n    Timed out after {timeout}s, while waiting for:\n    {entity}.{fn}\n    \n    Reason: {reason_string}'''\n                        )\n    \n>                       raise self._hook_failure(failure)\nE                       selene.core.exceptions.TimeoutException: Message: \nE                       \nE                       Timed out after 4s, while waiting for:\nE                       browser.element(('css selector', '.calc-steps-desktop li.current span')).has text 3. Оплата\nE                       \nE                       Reason: AssertionError: actual text: 2. Ввод данных\n\nentity     = <selene.core.entity.Element object at 0x0000022AD6C62080>\nfailure    = TimeoutException(\"\\n\\nTimed out after 4s, while waiting for:\\nbrowser.element(('css selector', '.calc-steps-desktop li.current span')).has text 3. Оплата\\n\\nReason: AssertionError: actual text: 2. Ввод данных\")\nfinish_time = 1666593192.5271907\nfn         = <selene.core.conditions.ElementCondition object at 0x0000022AD53AF820>\nreason_message = 'actual text: 2. Ввод данных'\nreason_string = 'AssertionError: actual text: 2. Ввод данных'\nself       = <selene.core.wait.Wait object at 0x0000022AD53AED70>\ntimeout    = 4\n\n..\\..\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\wait.py:125: TimeoutException",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "web_browser",
    "time" : {
      "start" : 1666593166536,
      "stop" : 1666593169802,
      "duration" : 3266
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "open_policy_purchase_form",
    "time" : {
      "start" : 1666593169802,
      "stop" : 1666593169802,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "open_policy_purchase_form_go_to_data_tab",
    "time" : {
      "start" : 1666593169803,
      "stop" : 1666593169803,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1666592950527,
      "stop" : 1666592950884,
      "duration" : 357
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "config",
    "time" : {
      "start" : 1666592950886,
      "stop" : 1666592950886,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 4s, while waiting for:\nbrowser.element(('css selector', '.calc-steps-desktop li.current span')).has text 3. Оплата\n\nReason: AssertionError: actual text: 2. Ввод данных",
    "statusTrace" : "self = <selene.core.wait.Wait object at 0x0000022AD53AED70>, fn = <selene.core.conditions.ElementCondition object at 0x0000022AD53AF820>\n\n    def for_(self, fn: Callable[[E], R]) -> R:\n        finish_time = time.time() + self._timeout\n    \n        while True:\n            try:\n>               return fn(self._entity)\n\nentity     = <selene.core.entity.Element object at 0x0000022AD6C62080>\nfailure    = TimeoutException(\"\\n\\nTimed out after 4s, while waiting for:\\nbrowser.element(('css selector', '.calc-steps-desktop li.current span')).has text 3. Оплата\\n\\nReason: AssertionError: actual text: 2. Ввод данных\")\nfinish_time = 1666593192.5271907\nfn         = <selene.core.conditions.ElementCondition object at 0x0000022AD53AF820>\nreason_message = 'actual text: 2. Ввод данных'\nreason_string = 'AssertionError: actual text: 2. Ввод данных'\nself       = <selene.core.wait.Wait object at 0x0000022AD53AED70>\ntimeout    = 4\n\n..\\..\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\wait.py:102: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selene.core.conditions.ElementCondition object at 0x0000022AD53AF820>, entity = <selene.core.entity.Element object at 0x0000022AD6C62080>\n\n    def __call__(self, entity: E) -> None:\n>       return self._fn(entity)\n\nentity     = <selene.core.entity.Element object at 0x0000022AD6C62080>\nself       = <selene.core.conditions.ElementCondition object at 0x0000022AD53AF820>\n\n..\\..\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\condition.py:151: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nentity = <selene.core.entity.Element object at 0x0000022AD6C62080>\n\n    def fn(entity: E) -> None:\n        query_to_str = str(query)\n        result = (\n            query.__name__\n            if query_to_str.startswith('<function')\n            else query_to_str\n        )\n        actual = query(entity)\n        if not predicate(actual):\n>           raise AssertionError(f'actual {result}: {actual}')\nE           AssertionError: actual text: 2. Ввод данных\n\nactual     = '2. Ввод данных'\nentity     = <selene.core.entity.Element object at 0x0000022AD6C62080>\npredicate  = <function includes.<locals>.fn at 0x0000022AD6C6C040>\nquery      = <selene.core.wait.Query object at 0x0000022AD5B4D150>\nquery_to_str = 'text'\nresult     = 'text'\n\n..\\..\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\condition.py:124: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.ui.test_form_data.TestCalculateForm object at 0x0000022AD6859120>\nopen_policy_purchase_form_go_to_data_tab = <function open_policy_purchase_form_go_to_data_tab.<locals>._open at 0x0000022AD6C6E200>\n\n    @allure.title('Переход на вкладку Оплата. Страхователь не является застрахованным. Страховая сумма 100000.'\n                  'Застрахованный не имеет паспорт')\n    def test_open_payment_form_add_person_without_passport_change_sum(self, open_policy_purchase_form_go_to_data_tab):\n        start_date = datetime.now()\n        result_date = start_date - timedelta(days=1096)\n    \n        test_data = FormDataBuilder() \\\n            .random_without_add_person() \\\n            .but() \\\n            .with_date_birth_insured(result_date.strftime('%d.%m.%Y')) \\\n            .with_id_insured(None) \\\n            .with_id_date_insured(None) \\\n            .build()\n    \n        policy_form_page = open_policy_purchase_form_go_to_data_tab(change_sum=True)\n        policy_form_page.fill_form_data(test_data)\n        policy_form_page.click_on_go_to_payments_tab()\n>       policy_form_page.assure_current_step_name(StepNameData.STEP_PAYMENT)\n\nopen_policy_purchase_form_go_to_data_tab = <function open_policy_purchase_form_go_to_data_tab.<locals>._open at 0x0000022AD6C6E200>\npolicy_form_page = <core.pages.coronavirus_insurance_policy_page.CoronavirusInsurancePolicyPage object at 0x0000022AD53AE5F0>\nresult_date = datetime.datetime(2019, 10, 24, 9, 32, 49, 803706)\nself       = <tests.ui.test_form_data.TestCalculateForm object at 0x0000022AD6859120>\nstart_date = datetime.datetime(2022, 10, 24, 9, 32, 49, 803706)\ntest_data  = FormData(fio='Ангелина Захаровна Сидорова', birthday='13.10.1991', doc_data='1542-427636', doc_issue_date='24.11.2017'...n=False, name_insured='Лебедева Лидия Петровна', date_birth_insured='24.10.2019', id_insured=None, id_dateInsured=None)\n\ntests\\ui\\test_form_data.py:89: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncore\\pages\\coronavirus_insurance_policy_page.py:80: in assure_current_step_name\n    self._current_step_text.should(have.text(value))\n        self       = <core.pages.coronavirus_insurance_policy_page.CoronavirusInsurancePolicyPage object at 0x0000022AD53AE5F0>\n        value      = <StepNameData.STEP_PAYMENT: '3. Оплата'>\n..\\..\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\entity.py:539: in should\n    super().should(condition)\n        __class__  = <class 'selene.core.entity.Element'>\n        condition  = <selene.core.conditions.ElementCondition object at 0x0000022AD53AF820>\n        self       = <selene.core.entity.Element object at 0x0000022AD6C62080>\n        timeout    = None\n..\\..\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\entity.py:126: in should\n    self.wait.for_(condition)\n        condition  = <selene.core.conditions.ElementCondition object at 0x0000022AD53AF820>\n        self       = <selene.core.entity.Element object at 0x0000022AD6C62080>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selene.core.wait.Wait object at 0x0000022AD53AED70>, fn = <selene.core.conditions.ElementCondition object at 0x0000022AD53AF820>\n\n        def for_(self, fn: Callable[[E], R]) -> R:\n            finish_time = time.time() + self._timeout\n    \n            while True:\n                try:\n                    return fn(self._entity)\n                except Exception as reason:\n                    if time.time() > finish_time:\n    \n                        reason_message = str(reason)\n    \n                        reason_string = '{name}: {message}'.format(\n                            name=reason.__class__.__name__, message=reason_message\n                        )\n                        # todo: think on how can we improve logging failures in selene, e.g. reverse msg and stacktrace\n                        # stacktrace = getattr(reason, 'stacktrace', None)\n                        timeout = self._timeout\n                        entity = self._entity\n    \n                        failure = TimeoutException(\n                            f'''\n    \n    Timed out after {timeout}s, while waiting for:\n    {entity}.{fn}\n    \n    Reason: {reason_string}'''\n                        )\n    \n>                       raise self._hook_failure(failure)\nE                       selene.core.exceptions.TimeoutException: Message: \nE                       \nE                       Timed out after 4s, while waiting for:\nE                       browser.element(('css selector', '.calc-steps-desktop li.current span')).has text 3. Оплата\nE                       \nE                       Reason: AssertionError: actual text: 2. Ввод данных\n\nentity     = <selene.core.entity.Element object at 0x0000022AD6C62080>\nfailure    = TimeoutException(\"\\n\\nTimed out after 4s, while waiting for:\\nbrowser.element(('css selector', '.calc-steps-desktop li.current span')).has text 3. Оплата\\n\\nReason: AssertionError: actual text: 2. Ввод данных\")\nfinish_time = 1666593192.5271907\nfn         = <selene.core.conditions.ElementCondition object at 0x0000022AD53AF820>\nreason_message = 'actual text: 2. Ввод данных'\nreason_string = 'AssertionError: actual text: 2. Ввод данных'\nself       = <selene.core.wait.Wait object at 0x0000022AD53AED70>\ntimeout    = 4\n\n..\\..\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\wait.py:125: TimeoutException",
    "steps" : [ {
      "name" : "Переход по адресу: \"https://old.absolutins.ru/kupit-strahovoj-polis/strahovanie-zhizni-i-zdorovya/zashchita-ot-virusa/\"",
      "time" : {
        "start" : 1666593170025,
        "stop" : 1666593173682,
        "duration" : 3657
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Выбрать страховую сумму полиса.",
      "time" : {
        "start" : 1666593173682,
        "stop" : 1666593175149,
        "duration" : 1467
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "выбрать сумму: 100000",
        "time" : {
          "start" : 1666593173682,
          "stop" : 1666593175149,
          "duration" : 1467
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 0,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "sum_value",
        "value" : "100000"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 1,
      "hasContent" : true
    }, {
      "name" : "Выбрать чекбокс \"Подтверждаю, что -  Отсутствуют лица, проживающие совместно с Застрахованным, у которых диагностирована коронавирусная инфекция COVID-2019 ( код заболевания по МКБ-10 – В 34.2.)\".",
      "time" : {
        "start" : 1666593175149,
        "stop" : 1666593175949,
        "duration" : 800
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Нажать кнопку \"Продолжить\".",
      "time" : {
        "start" : 1666593175949,
        "stop" : 1666593176468,
        "duration" : 519
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Заполнить форму \"Ввод данных\"",
      "time" : {
        "start" : 1666593176468,
        "stop" : 1666593179670,
        "duration" : 3202
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Заполнить поле \"ФИО страхователя\"",
        "time" : {
          "start" : 1666593176469,
          "stop" : 1666593177600,
          "duration" : 1131
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Ввести значение: Ангелина Захаровна Сидорова",
          "time" : {
            "start" : 1666593176469,
            "stop" : 1666593177600,
            "duration" : 1131
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "stepsCount" : 0,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "value",
          "value" : "'Ангелина Захаровна Сидорова'"
        } ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 1,
        "hasContent" : true
      }, {
        "name" : "Заполнить поле \"Дата рождения страхователя\"",
        "time" : {
          "start" : 1666593177600,
          "stop" : 1666593177743,
          "duration" : 143
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Ввести значение: 13.10.1991",
          "time" : {
            "start" : 1666593177600,
            "stop" : 1666593177743,
            "duration" : 143
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "stepsCount" : 0,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "value",
          "value" : "'13.10.1991'"
        } ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 1,
        "hasContent" : true
      }, {
        "name" : "Заполнить поле \"Серия/номер паспорта страхователя\"",
        "time" : {
          "start" : 1666593177743,
          "stop" : 1666593177780,
          "duration" : 37
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Ввести значение: 1542-427636",
          "time" : {
            "start" : 1666593177744,
            "stop" : 1666593177780,
            "duration" : 36
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "stepsCount" : 0,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "value",
          "value" : "'1542-427636'"
        } ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 1,
        "hasContent" : true
      }, {
        "name" : "Заполнить поле \"Дата выдачи\"",
        "time" : {
          "start" : 1666593177780,
          "stop" : 1666593177852,
          "duration" : 72
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Ввести значение: 24.11.2017",
          "time" : {
            "start" : 1666593177780,
            "stop" : 1666593177852,
            "duration" : 72
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "stepsCount" : 0,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "value",
          "value" : "'24.11.2017'"
        } ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 1,
        "hasContent" : true
      }, {
        "name" : "Заполнить поле \"Адрес регистрации\"",
        "time" : {
          "start" : 1666593177852,
          "stop" : 1666593178296,
          "duration" : 444
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Ввести значение: п. Смирных, пр. Угольный, д. 499, 486601",
          "time" : {
            "start" : 1666593177852,
            "stop" : 1666593178296,
            "duration" : 444
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "stepsCount" : 0,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "value",
          "value" : "'п. Смирных, пр. Угольный, д. 499, 486601'"
        } ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 1,
        "hasContent" : true
      }, {
        "name" : "Заполнить поле \"Телефон\"",
        "time" : {
          "start" : 1666593178296,
          "stop" : 1666593178621,
          "duration" : 325
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Ввести значение: +7(769)-500-26-91",
          "time" : {
            "start" : 1666593178296,
            "stop" : 1666593178621,
            "duration" : 325
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "stepsCount" : 0,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "value",
          "value" : "'+7(769)-500-26-91'"
        } ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 1,
        "hasContent" : true
      }, {
        "name" : "Заполнить поле \"Email\"",
        "time" : {
          "start" : 1666593178621,
          "stop" : 1666593179129,
          "duration" : 508
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Ввести значение: sazonovazinaida@oao.ru",
          "time" : {
            "start" : 1666593178622,
            "stop" : 1666593179129,
            "duration" : 507
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "stepsCount" : 0,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "value",
          "value" : "'sazonovazinaida@oao.ru'"
        } ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 1,
        "hasContent" : true
      }, {
        "name" : "Заполнить поле \"ФИО застрахованного\"",
        "time" : {
          "start" : 1666593179344,
          "stop" : 1666593179615,
          "duration" : 271
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Ввести значение: Лебедева Лидия Петровна",
          "time" : {
            "start" : 1666593179344,
            "stop" : 1666593179615,
            "duration" : 271
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "stepsCount" : 0,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "value",
          "value" : "'Лебедева Лидия Петровна'"
        } ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 1,
        "hasContent" : true
      }, {
        "name" : "Заполнить поле \"Дата рождения застрахованного\"",
        "time" : {
          "start" : 1666593179615,
          "stop" : 1666593179669,
          "duration" : 54
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Ввести значение: 24.10.2019",
          "time" : {
            "start" : 1666593179616,
            "stop" : 1666593179669,
            "duration" : 53
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "stepsCount" : 0,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "value",
          "value" : "'24.10.2019'"
        } ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 1,
        "hasContent" : true
      }, {
        "name" : "Заполнить поле \"Серия/номер паспорта застрахованного\"",
        "time" : {
          "start" : 1666593179670,
          "stop" : 1666593179670,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "value",
          "value" : "None"
        } ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 0,
        "hasContent" : true
      }, {
        "name" : "Заполнить поле \"Дата выдачи\" у застрахованного",
        "time" : {
          "start" : 1666593179670,
          "stop" : 1666593179670,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "value",
          "value" : "None"
        } ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 0,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "value",
        "value" : "FormData(fio='Ангелина Захаровна Сидорова', birthday='13.10.1991', doc_data='1542-427636', doc_issue_date='24.11.2017', registration_address='п. Смирных, пр. Угольный, д. 499, 486601', phone='+7(769)-500-26-91', email='sazonovazinaida@oao.ru', add_person=False, name_insured='Лебедева Лидия Петровна', date_birth_insured='24.10.2019', id_insured=None, id_dateInsured=None)"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 20,
      "hasContent" : true
    }, {
      "name" : "Нажать кнопку \"Перейти к оплате\"",
      "time" : {
        "start" : 1666593179670,
        "stop" : 1666593188500,
        "duration" : 8830
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Ожидание прогрузки страницы",
        "time" : {
          "start" : 1666593179816,
          "stop" : 1666593188500,
          "duration" : 8684
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 0,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 1,
      "hasContent" : true
    }, {
      "name" : "Проверить название текущего шага.",
      "time" : {
        "start" : 1666593188500,
        "stop" : 1666593192542,
        "duration" : 4042
      },
      "status" : "failed",
      "statusMessage" : "selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 4s, while waiting for:\nbrowser.element(('css selector', '.calc-steps-desktop li.current span')).has text 3. Оплата\n\nReason: AssertionError: actual text: 2. Ввод данных\n\n",
      "statusTrace" : "  File \"C:\\Users\\alpik\\.virtualenvs\\absolutins\\lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\alpik\\PycharmProjects\\absolutins\\core\\pages\\coronavirus_insurance_policy_page.py\", line 80, in assure_current_step_name\n    self._current_step_text.should(have.text(value))\n  File \"C:\\Users\\alpik\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\entity.py\", line 539, in should\n    super().should(condition)\n  File \"C:\\Users\\alpik\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\entity.py\", line 126, in should\n    self.wait.for_(condition)\n  File \"C:\\Users\\alpik\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\wait.py\", line 125, in for_\n    raise self._hook_failure(failure)\n",
      "steps" : [ {
        "name" : "Скролл к началу страницы",
        "time" : {
          "start" : 1666593188500,
          "stop" : 1666593188526,
          "duration" : 26
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 0,
        "hasContent" : false
      }, {
        "name" : "Текущий активный шаг: 3. Оплата",
        "time" : {
          "start" : 1666593188526,
          "stop" : 1666593192541,
          "duration" : 4015
        },
        "status" : "failed",
        "statusMessage" : "selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 4s, while waiting for:\nbrowser.element(('css selector', '.calc-steps-desktop li.current span')).has text 3. Оплата\n\nReason: AssertionError: actual text: 2. Ввод данных\n\n",
        "statusTrace" : "  File \"C:\\Users\\alpik\\PycharmProjects\\absolutins\\core\\pages\\coronavirus_insurance_policy_page.py\", line 80, in assure_current_step_name\n    self._current_step_text.should(have.text(value))\n  File \"C:\\Users\\alpik\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\entity.py\", line 539, in should\n    super().should(condition)\n  File \"C:\\Users\\alpik\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\entity.py\", line 126, in should\n    self.wait.for_(condition)\n  File \"C:\\Users\\alpik\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\wait.py\", line 125, in for_\n    raise self._hook_failure(failure)\n",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : true,
        "stepsCount" : 0,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "value",
        "value" : "'3. Оплата'"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 2,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "4f9da2ff0f482009",
      "name" : "failure-screenshot",
      "source" : "4f9da2ff0f482009.png",
      "type" : "image/png",
      "size" : 123526
    }, {
      "uid" : "26dd157fa7534113",
      "name" : "js-console-log",
      "source" : "26dd157fa7534113.txt",
      "type" : "text/plain",
      "size" : 3459
    }, {
      "uid" : "3617dc3b2e339ce4",
      "name" : "driver-log",
      "source" : "3617dc3b2e339ce4.txt",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "f4432118e971aa06",
      "name" : "log",
      "source" : "f4432118e971aa06.txt",
      "type" : "text/plain",
      "size" : 382
    }, {
      "uid" : "972ab7de1a72e0f1",
      "name" : "stdout",
      "source" : "972ab7de1a72e0f1.txt",
      "type" : "text/plain",
      "size" : 1
    }, {
      "uid" : "6cdceaeeebec3c52",
      "name" : "stderr",
      "source" : "6cdceaeeebec3c52.txt",
      "type" : "text/plain",
      "size" : 271
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 6,
    "shouldDisplayMessage" : true,
    "stepsCount" : 31,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "web_browser::0",
    "time" : {
      "start" : 1666593192865,
      "stop" : 1666593195874,
      "duration" : 3009
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "dedf8e42c751139b",
      "name" : "failure-screenshot",
      "source" : "dedf8e42c751139b.png",
      "type" : "image/png",
      "size" : 123526
    }, {
      "uid" : "8a8a77f458ae7e5a",
      "name" : "js-console-log",
      "source" : "8a8a77f458ae7e5a.txt",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "315dc41057b94d7e",
      "name" : "driver-log",
      "source" : "315dc41057b94d7e.txt",
      "type" : "text/plain",
      "size" : 2
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : true
  } ],
  "labels" : [ {
    "name" : "subSuite",
    "value" : "Ввод данных"
  }, {
    "name" : "suite",
    "value" : "Форма покупки полиса"
  }, {
    "name" : "parentSuite",
    "value" : "Регрессионное тестирование"
  }, {
    "name" : "tag",
    "value" : "regress"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('web_browser')"
  }, {
    "name" : "host",
    "value" : "DESKTOP-GMLT5VV"
  }, {
    "name" : "thread",
    "value" : "22688-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "ui.test_form_data"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "regress", "@pytest.mark.usefixtures('web_browser')" ]
  },
  "source" : "c84219f5a1e6fbd2.json",
  "parameterValues" : [ ]
}