{
  "uid" : "67324a75a5c67b49",
  "name" : "Переход на вкладку Оплата. Страхователь не является застрахованным. Страховая сумма 500000.Застрахованный имеет паспорт",
  "fullName" : "ui.test_form_data.TestCalculateForm#test_open_payment_form_add_person_with_passport",
  "historyId" : "d139d281355db82b6a20f86ff8c6f462",
  "time" : {
    "start" : 1666593060417,
    "stop" : 1666593082426,
    "duration" : 22009
  },
  "status" : "failed",
  "statusMessage" : "selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 4s, while waiting for:\nbrowser.element(('css selector', '.calc-steps-desktop li.current span')).has text 3. Оплата\n\nReason: AssertionError: actual text: 2. Ввод данных",
  "statusTrace" : "self = <selene.core.wait.Wait object at 0x0000022AD6C63280>, fn = <selene.core.conditions.ElementCondition object at 0x0000022AD6C632B0>\n\n    def for_(self, fn: Callable[[E], R]) -> R:\n        finish_time = time.time() + self._timeout\n    \n        while True:\n            try:\n>               return fn(self._entity)\n\nentity     = <selene.core.entity.Element object at 0x0000022AD6C61150>\nfailure    = TimeoutException(\"\\n\\nTimed out after 4s, while waiting for:\\nbrowser.element(('css selector', '.calc-steps-desktop li.current span')).has text 3. Оплата\\n\\nReason: AssertionError: actual text: 2. Ввод данных\")\nfinish_time = 1666593082.4238472\nfn         = <selene.core.conditions.ElementCondition object at 0x0000022AD6C632B0>\nreason_message = 'actual text: 2. Ввод данных'\nreason_string = 'AssertionError: actual text: 2. Ввод данных'\nself       = <selene.core.wait.Wait object at 0x0000022AD6C63280>\ntimeout    = 4\n\n..\\..\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\wait.py:102: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selene.core.conditions.ElementCondition object at 0x0000022AD6C632B0>, entity = <selene.core.entity.Element object at 0x0000022AD6C61150>\n\n    def __call__(self, entity: E) -> None:\n>       return self._fn(entity)\n\nentity     = <selene.core.entity.Element object at 0x0000022AD6C61150>\nself       = <selene.core.conditions.ElementCondition object at 0x0000022AD6C632B0>\n\n..\\..\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\condition.py:151: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nentity = <selene.core.entity.Element object at 0x0000022AD6C61150>\n\n    def fn(entity: E) -> None:\n        query_to_str = str(query)\n        result = (\n            query.__name__\n            if query_to_str.startswith('<function')\n            else query_to_str\n        )\n        actual = query(entity)\n        if not predicate(actual):\n>           raise AssertionError(f'actual {result}: {actual}')\nE           AssertionError: actual text: 2. Ввод данных\n\nactual     = '2. Ввод данных'\nentity     = <selene.core.entity.Element object at 0x0000022AD6C61150>\npredicate  = <function includes.<locals>.fn at 0x0000022AD547B1C0>\nquery      = <selene.core.wait.Query object at 0x0000022AD5B4D150>\nquery_to_str = 'text'\nresult     = 'text'\n\n..\\..\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\condition.py:124: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.ui.test_form_data.TestCalculateForm object at 0x0000022AD68588E0>\nopen_policy_purchase_form_go_to_data_tab = <function open_policy_purchase_form_go_to_data_tab.<locals>._open at 0x0000022AD547AD40>\n\n    @allure.title('Переход на вкладку Оплата. Страхователь не является застрахованным. Страховая сумма 500000.'\n                  'Застрахованный имеет паспорт')\n    def test_open_payment_form_add_person_with_passport(self, open_policy_purchase_form_go_to_data_tab):\n        test_data = FormDataBuilder().random_without_add_person().build()\n    \n        policy_form_page = open_policy_purchase_form_go_to_data_tab()\n        policy_form_page.fill_form_data(test_data)\n        policy_form_page.click_on_go_to_payments_tab()\n>       policy_form_page.assure_current_step_name(StepNameData.STEP_PAYMENT)\n\nopen_policy_purchase_form_go_to_data_tab = <function open_policy_purchase_form_go_to_data_tab.<locals>._open at 0x0000022AD547AD40>\npolicy_form_page = <core.pages.coronavirus_insurance_policy_page.CoronavirusInsurancePolicyPage object at 0x0000022AD6C604C0>\nself       = <tests.ui.test_form_data.TestCalculateForm object at 0x0000022AD68588E0>\ntest_data  = FormData(fio='Терентий Владленович Никонов', birthday='11.06.1971', doc_data='9828-262132', doc_issue_date='02.06.2012...'Степанов Вышеслав Феликсович', date_birth_insured='07.01.1979', id_insured='2403-385020', id_dateInsured='02.11.2011')\n\ntests\\ui\\test_form_data.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncore\\pages\\coronavirus_insurance_policy_page.py:80: in assure_current_step_name\n    self._current_step_text.should(have.text(value))\n        self       = <core.pages.coronavirus_insurance_policy_page.CoronavirusInsurancePolicyPage object at 0x0000022AD6C604C0>\n        value      = <StepNameData.STEP_PAYMENT: '3. Оплата'>\n..\\..\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\entity.py:539: in should\n    super().should(condition)\n        __class__  = <class 'selene.core.entity.Element'>\n        condition  = <selene.core.conditions.ElementCondition object at 0x0000022AD6C632B0>\n        self       = <selene.core.entity.Element object at 0x0000022AD6C61150>\n        timeout    = None\n..\\..\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\entity.py:126: in should\n    self.wait.for_(condition)\n        condition  = <selene.core.conditions.ElementCondition object at 0x0000022AD6C632B0>\n        self       = <selene.core.entity.Element object at 0x0000022AD6C61150>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selene.core.wait.Wait object at 0x0000022AD6C63280>, fn = <selene.core.conditions.ElementCondition object at 0x0000022AD6C632B0>\n\n        def for_(self, fn: Callable[[E], R]) -> R:\n            finish_time = time.time() + self._timeout\n    \n            while True:\n                try:\n                    return fn(self._entity)\n                except Exception as reason:\n                    if time.time() > finish_time:\n    \n                        reason_message = str(reason)\n    \n                        reason_string = '{name}: {message}'.format(\n                            name=reason.__class__.__name__, message=reason_message\n                        )\n                        # todo: think on how can we improve logging failures in selene, e.g. reverse msg and stacktrace\n                        # stacktrace = getattr(reason, 'stacktrace', None)\n                        timeout = self._timeout\n                        entity = self._entity\n    \n                        failure = TimeoutException(\n                            f'''\n    \n    Timed out after {timeout}s, while waiting for:\n    {entity}.{fn}\n    \n    Reason: {reason_string}'''\n                        )\n    \n>                       raise self._hook_failure(failure)\nE                       selene.core.exceptions.TimeoutException: Message: \nE                       \nE                       Timed out after 4s, while waiting for:\nE                       browser.element(('css selector', '.calc-steps-desktop li.current span')).has text 3. Оплата\nE                       \nE                       Reason: AssertionError: actual text: 2. Ввод данных\n\nentity     = <selene.core.entity.Element object at 0x0000022AD6C61150>\nfailure    = TimeoutException(\"\\n\\nTimed out after 4s, while waiting for:\\nbrowser.element(('css selector', '.calc-steps-desktop li.current span')).has text 3. Оплата\\n\\nReason: AssertionError: actual text: 2. Ввод данных\")\nfinish_time = 1666593082.4238472\nfn         = <selene.core.conditions.ElementCondition object at 0x0000022AD6C632B0>\nreason_message = 'actual text: 2. Ввод данных'\nreason_string = 'AssertionError: actual text: 2. Ввод данных'\nself       = <selene.core.wait.Wait object at 0x0000022AD6C63280>\ntimeout    = 4\n\n..\\..\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\wait.py:125: TimeoutException",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "open_policy_purchase_form_go_to_data_tab",
    "time" : {
      "start" : 1666593060416,
      "stop" : 1666593060416,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "open_policy_purchase_form",
    "time" : {
      "start" : 1666593060416,
      "stop" : 1666593060416,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1666592950527,
      "stop" : 1666592950884,
      "duration" : 357
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "config",
    "time" : {
      "start" : 1666592950886,
      "stop" : 1666592950886,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "web_browser",
    "time" : {
      "start" : 1666593057306,
      "stop" : 1666593060416,
      "duration" : 3110
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 4s, while waiting for:\nbrowser.element(('css selector', '.calc-steps-desktop li.current span')).has text 3. Оплата\n\nReason: AssertionError: actual text: 2. Ввод данных",
    "statusTrace" : "self = <selene.core.wait.Wait object at 0x0000022AD6C63280>, fn = <selene.core.conditions.ElementCondition object at 0x0000022AD6C632B0>\n\n    def for_(self, fn: Callable[[E], R]) -> R:\n        finish_time = time.time() + self._timeout\n    \n        while True:\n            try:\n>               return fn(self._entity)\n\nentity     = <selene.core.entity.Element object at 0x0000022AD6C61150>\nfailure    = TimeoutException(\"\\n\\nTimed out after 4s, while waiting for:\\nbrowser.element(('css selector', '.calc-steps-desktop li.current span')).has text 3. Оплата\\n\\nReason: AssertionError: actual text: 2. Ввод данных\")\nfinish_time = 1666593082.4238472\nfn         = <selene.core.conditions.ElementCondition object at 0x0000022AD6C632B0>\nreason_message = 'actual text: 2. Ввод данных'\nreason_string = 'AssertionError: actual text: 2. Ввод данных'\nself       = <selene.core.wait.Wait object at 0x0000022AD6C63280>\ntimeout    = 4\n\n..\\..\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\wait.py:102: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selene.core.conditions.ElementCondition object at 0x0000022AD6C632B0>, entity = <selene.core.entity.Element object at 0x0000022AD6C61150>\n\n    def __call__(self, entity: E) -> None:\n>       return self._fn(entity)\n\nentity     = <selene.core.entity.Element object at 0x0000022AD6C61150>\nself       = <selene.core.conditions.ElementCondition object at 0x0000022AD6C632B0>\n\n..\\..\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\condition.py:151: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nentity = <selene.core.entity.Element object at 0x0000022AD6C61150>\n\n    def fn(entity: E) -> None:\n        query_to_str = str(query)\n        result = (\n            query.__name__\n            if query_to_str.startswith('<function')\n            else query_to_str\n        )\n        actual = query(entity)\n        if not predicate(actual):\n>           raise AssertionError(f'actual {result}: {actual}')\nE           AssertionError: actual text: 2. Ввод данных\n\nactual     = '2. Ввод данных'\nentity     = <selene.core.entity.Element object at 0x0000022AD6C61150>\npredicate  = <function includes.<locals>.fn at 0x0000022AD547B1C0>\nquery      = <selene.core.wait.Query object at 0x0000022AD5B4D150>\nquery_to_str = 'text'\nresult     = 'text'\n\n..\\..\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\condition.py:124: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.ui.test_form_data.TestCalculateForm object at 0x0000022AD68588E0>\nopen_policy_purchase_form_go_to_data_tab = <function open_policy_purchase_form_go_to_data_tab.<locals>._open at 0x0000022AD547AD40>\n\n    @allure.title('Переход на вкладку Оплата. Страхователь не является застрахованным. Страховая сумма 500000.'\n                  'Застрахованный имеет паспорт')\n    def test_open_payment_form_add_person_with_passport(self, open_policy_purchase_form_go_to_data_tab):\n        test_data = FormDataBuilder().random_without_add_person().build()\n    \n        policy_form_page = open_policy_purchase_form_go_to_data_tab()\n        policy_form_page.fill_form_data(test_data)\n        policy_form_page.click_on_go_to_payments_tab()\n>       policy_form_page.assure_current_step_name(StepNameData.STEP_PAYMENT)\n\nopen_policy_purchase_form_go_to_data_tab = <function open_policy_purchase_form_go_to_data_tab.<locals>._open at 0x0000022AD547AD40>\npolicy_form_page = <core.pages.coronavirus_insurance_policy_page.CoronavirusInsurancePolicyPage object at 0x0000022AD6C604C0>\nself       = <tests.ui.test_form_data.TestCalculateForm object at 0x0000022AD68588E0>\ntest_data  = FormData(fio='Терентий Владленович Никонов', birthday='11.06.1971', doc_data='9828-262132', doc_issue_date='02.06.2012...'Степанов Вышеслав Феликсович', date_birth_insured='07.01.1979', id_insured='2403-385020', id_dateInsured='02.11.2011')\n\ntests\\ui\\test_form_data.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncore\\pages\\coronavirus_insurance_policy_page.py:80: in assure_current_step_name\n    self._current_step_text.should(have.text(value))\n        self       = <core.pages.coronavirus_insurance_policy_page.CoronavirusInsurancePolicyPage object at 0x0000022AD6C604C0>\n        value      = <StepNameData.STEP_PAYMENT: '3. Оплата'>\n..\\..\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\entity.py:539: in should\n    super().should(condition)\n        __class__  = <class 'selene.core.entity.Element'>\n        condition  = <selene.core.conditions.ElementCondition object at 0x0000022AD6C632B0>\n        self       = <selene.core.entity.Element object at 0x0000022AD6C61150>\n        timeout    = None\n..\\..\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\entity.py:126: in should\n    self.wait.for_(condition)\n        condition  = <selene.core.conditions.ElementCondition object at 0x0000022AD6C632B0>\n        self       = <selene.core.entity.Element object at 0x0000022AD6C61150>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selene.core.wait.Wait object at 0x0000022AD6C63280>, fn = <selene.core.conditions.ElementCondition object at 0x0000022AD6C632B0>\n\n        def for_(self, fn: Callable[[E], R]) -> R:\n            finish_time = time.time() + self._timeout\n    \n            while True:\n                try:\n                    return fn(self._entity)\n                except Exception as reason:\n                    if time.time() > finish_time:\n    \n                        reason_message = str(reason)\n    \n                        reason_string = '{name}: {message}'.format(\n                            name=reason.__class__.__name__, message=reason_message\n                        )\n                        # todo: think on how can we improve logging failures in selene, e.g. reverse msg and stacktrace\n                        # stacktrace = getattr(reason, 'stacktrace', None)\n                        timeout = self._timeout\n                        entity = self._entity\n    \n                        failure = TimeoutException(\n                            f'''\n    \n    Timed out after {timeout}s, while waiting for:\n    {entity}.{fn}\n    \n    Reason: {reason_string}'''\n                        )\n    \n>                       raise self._hook_failure(failure)\nE                       selene.core.exceptions.TimeoutException: Message: \nE                       \nE                       Timed out after 4s, while waiting for:\nE                       browser.element(('css selector', '.calc-steps-desktop li.current span')).has text 3. Оплата\nE                       \nE                       Reason: AssertionError: actual text: 2. Ввод данных\n\nentity     = <selene.core.entity.Element object at 0x0000022AD6C61150>\nfailure    = TimeoutException(\"\\n\\nTimed out after 4s, while waiting for:\\nbrowser.element(('css selector', '.calc-steps-desktop li.current span')).has text 3. Оплата\\n\\nReason: AssertionError: actual text: 2. Ввод данных\")\nfinish_time = 1666593082.4238472\nfn         = <selene.core.conditions.ElementCondition object at 0x0000022AD6C632B0>\nreason_message = 'actual text: 2. Ввод данных'\nreason_string = 'AssertionError: actual text: 2. Ввод данных'\nself       = <selene.core.wait.Wait object at 0x0000022AD6C63280>\ntimeout    = 4\n\n..\\..\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\wait.py:125: TimeoutException",
    "steps" : [ {
      "name" : "Переход по адресу: \"https://old.absolutins.ru/kupit-strahovoj-polis/strahovanie-zhizni-i-zdorovya/zashchita-ot-virusa/\"",
      "time" : {
        "start" : 1666593060614,
        "stop" : 1666593065880,
        "duration" : 5266
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Выбрать чекбокс \"Подтверждаю, что -  Отсутствуют лица, проживающие совместно с Застрахованным, у которых диагностирована коронавирусная инфекция COVID-2019 ( код заболевания по МКБ-10 – В 34.2.)\".",
      "time" : {
        "start" : 1666593065880,
        "stop" : 1666593066433,
        "duration" : 553
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Нажать кнопку \"Продолжить\".",
      "time" : {
        "start" : 1666593066434,
        "stop" : 1666593067052,
        "duration" : 618
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Заполнить форму \"Ввод данных\"",
      "time" : {
        "start" : 1666593067052,
        "stop" : 1666593070014,
        "duration" : 2962
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Заполнить поле \"ФИО страхователя\"",
        "time" : {
          "start" : 1666593067053,
          "stop" : 1666593067662,
          "duration" : 609
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Ввести значение: Терентий Владленович Никонов",
          "time" : {
            "start" : 1666593067053,
            "stop" : 1666593067662,
            "duration" : 609
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "stepsCount" : 0,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "value",
          "value" : "'Терентий Владленович Никонов'"
        } ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 1,
        "hasContent" : true
      }, {
        "name" : "Заполнить поле \"Дата рождения страхователя\"",
        "time" : {
          "start" : 1666593067662,
          "stop" : 1666593067895,
          "duration" : 233
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Ввести значение: 11.06.1971",
          "time" : {
            "start" : 1666593067662,
            "stop" : 1666593067895,
            "duration" : 233
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "stepsCount" : 0,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "value",
          "value" : "'11.06.1971'"
        } ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 1,
        "hasContent" : true
      }, {
        "name" : "Заполнить поле \"Серия/номер паспорта страхователя\"",
        "time" : {
          "start" : 1666593067896,
          "stop" : 1666593067961,
          "duration" : 65
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Ввести значение: 9828-262132",
          "time" : {
            "start" : 1666593067896,
            "stop" : 1666593067961,
            "duration" : 65
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "stepsCount" : 0,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "value",
          "value" : "'9828-262132'"
        } ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 1,
        "hasContent" : true
      }, {
        "name" : "Заполнить поле \"Дата выдачи\"",
        "time" : {
          "start" : 1666593067961,
          "stop" : 1666593068027,
          "duration" : 66
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Ввести значение: 02.06.2012",
          "time" : {
            "start" : 1666593067961,
            "stop" : 1666593068027,
            "duration" : 66
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "stepsCount" : 0,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "value",
          "value" : "'02.06.2012'"
        } ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 1,
        "hasContent" : true
      }, {
        "name" : "Заполнить поле \"Адрес регистрации\"",
        "time" : {
          "start" : 1666593068027,
          "stop" : 1666593068665,
          "duration" : 638
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Ввести значение: с. Агата, бул. Коммунаров, д. 19 стр. 42, 117164",
          "time" : {
            "start" : 1666593068027,
            "stop" : 1666593068665,
            "duration" : 638
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "stepsCount" : 0,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "value",
          "value" : "'с. Агата, бул. Коммунаров, д. 19 стр. 42, 117164'"
        } ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 1,
        "hasContent" : true
      }, {
        "name" : "Заполнить поле \"Телефон\"",
        "time" : {
          "start" : 1666593068666,
          "stop" : 1666593068951,
          "duration" : 285
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Ввести значение: +7(988)-462-99-63",
          "time" : {
            "start" : 1666593068666,
            "stop" : 1666593068951,
            "duration" : 285
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "stepsCount" : 0,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "value",
          "value" : "'+7(988)-462-99-63'"
        } ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 1,
        "hasContent" : true
      }, {
        "name" : "Заполнить поле \"Email\"",
        "time" : {
          "start" : 1666593068952,
          "stop" : 1666593069215,
          "duration" : 263
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Ввести значение: bfilatova@ooo.edu",
          "time" : {
            "start" : 1666593068952,
            "stop" : 1666593069215,
            "duration" : 263
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "stepsCount" : 0,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "value",
          "value" : "'bfilatova@ooo.edu'"
        } ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 1,
        "hasContent" : true
      }, {
        "name" : "Заполнить поле \"ФИО застрахованного\"",
        "time" : {
          "start" : 1666593069427,
          "stop" : 1666593069858,
          "duration" : 431
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Ввести значение: Степанов Вышеслав Феликсович",
          "time" : {
            "start" : 1666593069427,
            "stop" : 1666593069858,
            "duration" : 431
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "stepsCount" : 0,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "value",
          "value" : "'Степанов Вышеслав Феликсович'"
        } ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 1,
        "hasContent" : true
      }, {
        "name" : "Заполнить поле \"Дата рождения застрахованного\"",
        "time" : {
          "start" : 1666593069858,
          "stop" : 1666593069914,
          "duration" : 56
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Ввести значение: 07.01.1979",
          "time" : {
            "start" : 1666593069858,
            "stop" : 1666593069914,
            "duration" : 56
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "stepsCount" : 0,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "value",
          "value" : "'07.01.1979'"
        } ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 1,
        "hasContent" : true
      }, {
        "name" : "Заполнить поле \"Серия/номер паспорта застрахованного\"",
        "time" : {
          "start" : 1666593069914,
          "stop" : 1666593069947,
          "duration" : 33
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Ввести значение: 2403-385020",
          "time" : {
            "start" : 1666593069914,
            "stop" : 1666593069947,
            "duration" : 33
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "stepsCount" : 0,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "value",
          "value" : "'2403-385020'"
        } ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 1,
        "hasContent" : true
      }, {
        "name" : "Заполнить поле \"Дата выдачи\" у застрахованного",
        "time" : {
          "start" : 1666593069948,
          "stop" : 1666593070014,
          "duration" : 66
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Ввести значение: 02.11.2011",
          "time" : {
            "start" : 1666593069948,
            "stop" : 1666593070014,
            "duration" : 66
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "stepsCount" : 0,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "value",
          "value" : "'02.11.2011'"
        } ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 1,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "value",
        "value" : "FormData(fio='Терентий Владленович Никонов', birthday='11.06.1971', doc_data='9828-262132', doc_issue_date='02.06.2012', registration_address='с. Агата, бул. Коммунаров, д. 19 стр. 42, 117164', phone='+7(988)-462-99-63', email='bfilatova@ooo.edu', add_person=False, name_insured='Степанов Вышеслав Феликсович', date_birth_insured='07.01.1979', id_insured='2403-385020', id_dateInsured='02.11.2011')"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 22,
      "hasContent" : true
    }, {
      "name" : "Нажать кнопку \"Перейти к оплате\"",
      "time" : {
        "start" : 1666593070014,
        "stop" : 1666593078380,
        "duration" : 8366
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Ожидание прогрузки страницы",
        "time" : {
          "start" : 1666593070131,
          "stop" : 1666593078380,
          "duration" : 8249
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 0,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 1,
      "hasContent" : true
    }, {
      "name" : "Проверить название текущего шага.",
      "time" : {
        "start" : 1666593078380,
        "stop" : 1666593082426,
        "duration" : 4046
      },
      "status" : "failed",
      "statusMessage" : "selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 4s, while waiting for:\nbrowser.element(('css selector', '.calc-steps-desktop li.current span')).has text 3. Оплата\n\nReason: AssertionError: actual text: 2. Ввод данных\n\n",
      "statusTrace" : "  File \"C:\\Users\\alpik\\.virtualenvs\\absolutins\\lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\alpik\\PycharmProjects\\absolutins\\core\\pages\\coronavirus_insurance_policy_page.py\", line 80, in assure_current_step_name\n    self._current_step_text.should(have.text(value))\n  File \"C:\\Users\\alpik\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\entity.py\", line 539, in should\n    super().should(condition)\n  File \"C:\\Users\\alpik\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\entity.py\", line 126, in should\n    self.wait.for_(condition)\n  File \"C:\\Users\\alpik\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\wait.py\", line 125, in for_\n    raise self._hook_failure(failure)\n",
      "steps" : [ {
        "name" : "Скролл к началу страницы",
        "time" : {
          "start" : 1666593078380,
          "stop" : 1666593078424,
          "duration" : 44
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 0,
        "hasContent" : false
      }, {
        "name" : "Текущий активный шаг: 3. Оплата",
        "time" : {
          "start" : 1666593078424,
          "stop" : 1666593082425,
          "duration" : 4001
        },
        "status" : "failed",
        "statusMessage" : "selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 4s, while waiting for:\nbrowser.element(('css selector', '.calc-steps-desktop li.current span')).has text 3. Оплата\n\nReason: AssertionError: actual text: 2. Ввод данных\n\n",
        "statusTrace" : "  File \"C:\\Users\\alpik\\PycharmProjects\\absolutins\\core\\pages\\coronavirus_insurance_policy_page.py\", line 80, in assure_current_step_name\n    self._current_step_text.should(have.text(value))\n  File \"C:\\Users\\alpik\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\entity.py\", line 539, in should\n    super().should(condition)\n  File \"C:\\Users\\alpik\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\entity.py\", line 126, in should\n    self.wait.for_(condition)\n  File \"C:\\Users\\alpik\\.virtualenvs\\absolutins\\lib\\site-packages\\selene\\core\\wait.py\", line 125, in for_\n    raise self._hook_failure(failure)\n",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : true,
        "stepsCount" : 0,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "value",
        "value" : "'3. Оплата'"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 2,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "8c73d3eda3a16664",
      "name" : "failure-screenshot",
      "source" : "8c73d3eda3a16664.png",
      "type" : "image/png",
      "size" : 123526
    }, {
      "uid" : "18b73e1bb858037a",
      "name" : "js-console-log",
      "source" : "18b73e1bb858037a.txt",
      "type" : "text/plain",
      "size" : 3471
    }, {
      "uid" : "d1307937fc64a8fa",
      "name" : "driver-log",
      "source" : "d1307937fc64a8fa.txt",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "4235a64cca0eb65f",
      "name" : "log",
      "source" : "4235a64cca0eb65f.txt",
      "type" : "text/plain",
      "size" : 382
    }, {
      "uid" : "562267ff6c8a916c",
      "name" : "stdout",
      "source" : "562267ff6c8a916c.txt",
      "type" : "text/plain",
      "size" : 1
    }, {
      "uid" : "1170c2c714e1bb6",
      "name" : "stderr",
      "source" : "1170c2c714e1bb6.txt",
      "type" : "text/plain",
      "size" : 271
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 6,
    "shouldDisplayMessage" : true,
    "stepsCount" : 31,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "web_browser::0",
    "time" : {
      "start" : 1666593082730,
      "stop" : 1666593085425,
      "duration" : 2695
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "c79a3b6e59a15780",
      "name" : "failure-screenshot",
      "source" : "c79a3b6e59a15780.png",
      "type" : "image/png",
      "size" : 123526
    }, {
      "uid" : "4e7eed90e89e94cb",
      "name" : "js-console-log",
      "source" : "4e7eed90e89e94cb.txt",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "22d86b0537c81066",
      "name" : "driver-log",
      "source" : "22d86b0537c81066.txt",
      "type" : "text/plain",
      "size" : 2
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : true
  } ],
  "labels" : [ {
    "name" : "subSuite",
    "value" : "Ввод данных"
  }, {
    "name" : "suite",
    "value" : "Форма покупки полиса"
  }, {
    "name" : "parentSuite",
    "value" : "Регрессионное тестирование"
  }, {
    "name" : "tag",
    "value" : "regress"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('web_browser')"
  }, {
    "name" : "host",
    "value" : "DESKTOP-GMLT5VV"
  }, {
    "name" : "thread",
    "value" : "22688-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "ui.test_form_data"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "regress", "@pytest.mark.usefixtures('web_browser')" ]
  },
  "source" : "67324a75a5c67b49.json",
  "parameterValues" : [ ]
}